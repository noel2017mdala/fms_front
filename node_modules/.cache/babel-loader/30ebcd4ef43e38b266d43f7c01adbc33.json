{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/abel/fms_front/src/components/Dashboard/Modals/ViewProjectsModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Background, ModalWrapper, ModalCotent, CloseModal } from \"../../../styledComponents/Dashboard/Modals/viewProjectsModal\";\nimport { viewprojects } from \"../../../redux/actions/actionCreator\";\nimport Cookies from \"universal-cookie\";\nimport Bin from \"../../../images/bin.png\";\n\nconst ViewProjects = props => {\n  _s();\n\n  // user informatin stored in cookies\n  const cookie = new Cookies();\n  let userInfo = cookie.get(\"user info\");\n  let userData = {\n    token: cookie.get(\"login\"),\n    id: userInfo[0].id\n  }; // Action dispatcher function\n\n  const dispatch = useDispatch(); //state selector\n\n  const select = useSelector(e => {\n    return e;\n  }); // dispatches the action when the component renders\n\n  useEffect(() => {\n    dispatch(viewprojects(userData));\n  }, [userData, dispatch]); // loader css overider\n\n  const override = `\n  display: block;\n  margin: 0 auto;\n  border-color: black;\n  margin-top: 10px;\n      `;\n\n  const getDate = e => {\n    let date = new Date(e);\n    return date.toDateString();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Background, {\n      children: /*#__PURE__*/_jsxDEV(ModalWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(ModalCotent, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"All Projects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), !select.projects.projects ? /*#__PURE__*/_jsxDEV(ClipLoader, {\n              size: \"30px\",\n              css: override\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this) : select.projects.projects.projects.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [e.projects_name, /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: e.date_created\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: Bin,\n                    alt: \"Bin\",\n                    onClick: () => {\n                      console.log(e.id);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, this)\n            }, e.projects_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CloseModal, {\n          onClick: () => {\n            props.setState(prevState => ({ ...prevState,\n              viewProjects: false\n            }));\n          },\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ViewProjects, \"M0bnVij51e5Ju9/GUNPqa+eNaAM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ViewProjects;\nexport default ViewProjects;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewProjects\");","map":{"version":3,"sources":["/home/abel/fms_front/src/components/Dashboard/Modals/ViewProjectsModal.js"],"names":["React","useEffect","ClipLoader","useDispatch","useSelector","Background","ModalWrapper","ModalCotent","CloseModal","viewprojects","Cookies","Bin","ViewProjects","props","cookie","userInfo","get","userData","token","id","dispatch","select","e","override","getDate","date","Date","toDateString","projects","map","projects_name","date_created","console","log","projects_id","setState","prevState","viewProjects"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Background,\n  ModalWrapper,\n  ModalCotent,\n  CloseModal,\n} from \"../../../styledComponents/Dashboard/Modals/viewProjectsModal\";\nimport { viewprojects } from \"../../../redux/actions/actionCreator\";\nimport Cookies from \"universal-cookie\";\nimport Bin from \"../../../images/bin.png\";\n\nconst ViewProjects = (props) => {\n  // user informatin stored in cookies\n  const cookie = new Cookies();\n  let userInfo = cookie.get(\"user info\");\n  let userData = { token: cookie.get(\"login\"), id: userInfo[0].id };\n\n  // Action dispatcher function\n  const dispatch = useDispatch();\n\n  //state selector\n  const select = useSelector((e) => {\n    return e;\n  });\n\n  // dispatches the action when the component renders\n  useEffect(() => {\n    dispatch(viewprojects(userData));\n  }, [userData, dispatch]);\n\n  // loader css overider\n  const override = `\n  display: block;\n  margin: 0 auto;\n  border-color: black;\n  margin-top: 10px;\n      `;\n\n  const getDate = (e) => {\n    let date = new Date(e);\n    return date.toDateString();\n  };\n  return (\n    <div>\n      <Background>\n        <ModalWrapper>\n          <ModalCotent>\n            <div>\n              <h3>All Projects</h3>\n              {!select.projects.projects ? (\n                <ClipLoader size=\"30px\" css={override} />\n              ) : (\n                select.projects.projects.projects.map((e) => (\n                  <div key={e.projects_id}>\n                    <ul>\n                      <li>\n                        {e.projects_name}\n                        <span>{e.date_created}</span>\n                        <img\n                          src={Bin}\n                          alt=\"Bin\"\n                          onClick={() => {\n                            console.log(e.id);\n                          }}\n                        />\n                      </li>\n                    </ul>\n                  </div>\n                ))\n              )}\n            </div>\n          </ModalCotent>\n          <CloseModal\n            onClick={() => {\n              props.setState((prevState) => ({\n                ...prevState,\n                viewProjects: false,\n              }));\n            }}\n          >\n            &times;\n          </CloseModal>\n        </ModalWrapper>\n      </Background>\n    </div>\n  );\n};\n\nexport default ViewProjects;\n"]},"metadata":{},"sourceType":"module"}