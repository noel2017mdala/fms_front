{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/abel/fms_front/src/components/Dashboard/Modals/listTransactionModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { allActivities } from \"../../../redux/actions/actionCreator\";\nimport Cookies from \"universal-cookie\";\nimport Bin from \"../../../images/bin.png\";\nimport DeleteModal from \"./DeleteModal\";\nimport { Background, ModalWrapper, ModalCotent, CloseModal } from \"../../../styledComponents/Dashboard/Modals/listTransactionsModal\";\n\nconst ListTransactions = ({\n  state,\n  setState\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const select = useSelector(e => {\n    return e;\n  });\n  const [modalState, showModal] = useState({\n    showDeleteModal: false,\n    id: \"\"\n  });\n  const override = `\n    display: block;\n    margin: 0 auto;\n    border-color: black;\n    margin-top: 10px;\n        `;\n  const cookie = new Cookies();\n  let userInfo = cookie.get(\"user info\");\n  let userData = {\n    token: cookie.get(\"login\"),\n    id: userInfo[0].id\n  };\n  useEffect(() => {\n    dispatch(allActivities(userData));\n  }, [dispatch]);\n\n  const deleteActivity = data => {\n    showModal(prevstate => ({ ...prevstate,\n      showDeleteModal: !modalState.showDeleteModal,\n      id: data\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: state.ListTransaction ? /*#__PURE__*/_jsxDEV(Background, {\n      children: /*#__PURE__*/_jsxDEV(ModalWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(ModalCotent, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"listContent\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"All Transactions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), !select.activity.allActivities ? /*#__PURE__*/_jsxDEV(ClipLoader, {\n              css: override,\n              size: \"30px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this) : select.activity.allActivities.transactions.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"transactionlist\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [e.transaction_name, /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"ammount\",\n                    children: e.transaction_ammount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: e.transaction_date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: Bin,\n                    alt: \"Bin\",\n                    onClick: () => {\n                      // console.log(e.id);\n                      deleteActivity(e.id);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 23\n              }, this)\n            }, e.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), modalState.showDeleteModal ? /*#__PURE__*/_jsxDEV(DeleteModal, {\n            id: modalState.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CloseModal, {\n          onClick: () => {\n            setState(prevstate => ({ ...prevstate,\n              ListTransaction: false\n            }));\n          },\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListTransactions, \"zobyOxNine0PaOxPbWJwyAR6QW0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ListTransactions;\nexport default ListTransactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTransactions\");","map":{"version":3,"sources":["/home/abel/fms_front/src/components/Dashboard/Modals/listTransactionModal.js"],"names":["React","useEffect","useState","ClipLoader","useDispatch","useSelector","allActivities","Cookies","Bin","DeleteModal","Background","ModalWrapper","ModalCotent","CloseModal","ListTransactions","state","setState","dispatch","select","e","modalState","showModal","showDeleteModal","id","override","cookie","userInfo","get","userData","token","deleteActivity","data","prevstate","ListTransaction","activity","transactions","map","transaction_name","transaction_ammount","transaction_date"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { allActivities } from \"../../../redux/actions/actionCreator\";\nimport Cookies from \"universal-cookie\";\nimport Bin from \"../../../images/bin.png\";\nimport DeleteModal from \"./DeleteModal\";\nimport {\n  Background,\n  ModalWrapper,\n  ModalCotent,\n  CloseModal,\n} from \"../../../styledComponents/Dashboard/Modals/listTransactionsModal\";\nconst ListTransactions = ({ state, setState }) => {\n  const dispatch = useDispatch();\n  const select = useSelector((e) => {\n    return e;\n  });\n\n  const [modalState, showModal] = useState({\n    showDeleteModal: false,\n    id: \"\",\n  });\n\n  const override = `\n    display: block;\n    margin: 0 auto;\n    border-color: black;\n    margin-top: 10px;\n        `;\n\n  const cookie = new Cookies();\n  let userInfo = cookie.get(\"user info\");\n  let userData = { token: cookie.get(\"login\"), id: userInfo[0].id };\n\n  useEffect(() => {\n    dispatch(allActivities(userData));\n  }, [dispatch]);\n\n  const deleteActivity = (data) => {\n    showModal((prevstate) => ({\n      ...prevstate,\n      showDeleteModal: !modalState.showDeleteModal,\n      id: data,\n    }));\n  };\n\n  return (\n    <div>\n      {state.ListTransaction ? (\n        <Background>\n          <ModalWrapper>\n            <ModalCotent>\n              <div className=\"listContent\">\n                <h3>All Transactions</h3>\n                {!select.activity.allActivities ? (\n                  <ClipLoader css={override} size=\"30px\" />\n                ) : (\n                  select.activity.allActivities.transactions.map((e) => (\n                    <div key={e.id} className=\"transactionlist\">\n                      <ul>\n                        <li>\n                          {e.transaction_name}\n                          <span className=\"ammount\">\n                            {e.transaction_ammount}\n                          </span>\n                          <span>{e.transaction_date}</span>\n                          <img\n                            src={Bin}\n                            alt=\"Bin\"\n                            onClick={() => {\n                              // console.log(e.id);\n                              deleteActivity(e.id);\n                            }}\n                          />\n                        </li>\n                      </ul>\n                    </div>\n                  ))\n                )}\n              </div>\n              {modalState.showDeleteModal ? (\n                <DeleteModal id={modalState.id} />\n              ) : null}\n            </ModalCotent>\n            <CloseModal\n              onClick={() => {\n                setState((prevstate) => ({\n                  ...prevstate,\n                  ListTransaction: false,\n                }));\n              }}\n            >\n              &times;\n            </CloseModal>\n          </ModalWrapper>\n        </Background>\n      ) : null}\n    </div>\n  );\n};\n\nexport default ListTransactions;\n"]},"metadata":{},"sourceType":"module"}