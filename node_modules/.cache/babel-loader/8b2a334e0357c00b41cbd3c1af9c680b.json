{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/abel/fms_front/src/components/Dashboard/Activities.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport Cookies from \"universal-cookie\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { activitiesAction, getEarnings } from \"../../redux/actions/dashboard/activities\";\nimport icon from \"../../images/more-512.webp\";\nimport { Activities as Activity } from \"../../styledComponents/Dashboard/Activities\";\n\nconst Activities = () => {\n  _s();\n\n  //user tokens\n  const cookies = new Cookies();\n  let getToken = cookies.get(\"auth_token\");\n  let getUserInfo = cookies.get(\"user_info\"); //dispatch function\n\n  const dispatch = useDispatch();\n  const userData = {\n    token: getToken,\n    id: getUserInfo\n  };\n  const [state, setState] = useState({\n    active: false,\n    Transations: true,\n    Earnings: false,\n    Expenses: false\n  }); //border css\n\n  const stye = {\n    borderBottom: \"2px solid black\"\n  }; //call action when page has loaded\n\n  const select = useSelector(e => {\n    return e;\n  }); // console.log(select.getActivities.transaction);\n\n  useEffect(() => {\n    dispatch(activitiesAction(userData));\n  }, [dispatch]);\n\n  const getAllTransacrtions = () => {\n    setState(prevState => ({ ...prevState,\n      Transations: true,\n      Earnings: false,\n      Expenses: false\n    }));\n    dispatch(activitiesAction(userData));\n  };\n\n  const getEarnings = () => {\n    setState(prevState => ({ ...prevState,\n      Transations: false,\n      Earnings: true,\n      Expenses: false\n    }));\n    dispatch(getEarnings(userData));\n  };\n\n  const getExpenses = () => {\n    setState(prevState => ({ ...prevState,\n      Transations: false,\n      Earnings: false,\n      Expenses: true\n    })); // dispatch(Expences(userData));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Activity, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: icon,\n        alt: \"options icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recent Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          style: state.Transations ? stye : null,\n          onClick: () => {\n            getAllTransacrtions();\n          },\n          children: \"Transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          style: state.Earnings ? stye : null,\n          onClick: () => {\n            getEarnings();\n          },\n          children: \"Earnings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          style: state.Expenses ? stye : null,\n          onClick: () => {\n            getExpenses();\n          },\n          children: \"Expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: !select.getActivities.transaction ? null : select.getActivities.transaction.map(e => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: e.transaction_name\n      }, e.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Activities, \"TziDsXP8YVJxb9e4foWVD67pGR0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Activities;\nexport default Activities;\n\nvar _c;\n\n$RefreshReg$(_c, \"Activities\");","map":{"version":3,"sources":["/home/abel/fms_front/src/components/Dashboard/Activities.js"],"names":["React","useState","useEffect","ClipLoader","Cookies","useDispatch","useSelector","activitiesAction","getEarnings","icon","Activities","Activity","cookies","getToken","get","getUserInfo","dispatch","userData","token","id","state","setState","active","Transations","Earnings","Expenses","stye","borderBottom","select","e","getAllTransacrtions","prevState","getExpenses","getActivities","transaction","map","transaction_name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport Cookies from \"universal-cookie\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  activitiesAction,\n  getEarnings,\n} from \"../../redux/actions/dashboard/activities\";\nimport icon from \"../../images/more-512.webp\";\nimport { Activities as Activity } from \"../../styledComponents/Dashboard/Activities\";\nconst Activities = () => {\n  //user tokens\n  const cookies = new Cookies();\n  let getToken = cookies.get(\"auth_token\");\n  let getUserInfo = cookies.get(\"user_info\");\n\n  //dispatch function\n  const dispatch = useDispatch();\n\n  const userData = {\n    token: getToken,\n    id: getUserInfo,\n  };\n\n  const [state, setState] = useState({\n    active: false,\n    Transations: true,\n    Earnings: false,\n    Expenses: false,\n  });\n\n  //border css\n  const stye = {\n    borderBottom: \"2px solid black\",\n  };\n\n  //call action when page has loaded\n  const select = useSelector((e) => {\n    return e;\n  });\n  // console.log(select.getActivities.transaction);\n\n  useEffect(() => {\n    dispatch(activitiesAction(userData));\n  }, [dispatch]);\n\n  const getAllTransacrtions = () => {\n    setState((prevState) => ({\n      ...prevState,\n      Transations: true,\n      Earnings: false,\n      Expenses: false,\n    }));\n    dispatch(activitiesAction(userData));\n  };\n\n  const getEarnings = () => {\n    setState((prevState) => ({\n      ...prevState,\n      Transations: false,\n      Earnings: true,\n      Expenses: false,\n    }));\n    dispatch(getEarnings(userData));\n  };\n\n  const getExpenses = () => {\n    setState((prevState) => ({\n      ...prevState,\n      Transations: false,\n      Earnings: false,\n      Expenses: true,\n    }));\n    // dispatch(Expences(userData));\n  };\n  return (\n    <Activity>\n      <div className=\"top-bar\">\n        <img src={icon} alt=\"options icon\" />\n        <h3>Recent Transactions</h3>\n\n        <ul>\n          <li\n            style={state.Transations ? stye : null}\n            onClick={() => {\n              getAllTransacrtions();\n            }}\n          >\n            Transactions\n          </li>\n          <li\n            style={state.Earnings ? stye : null}\n            onClick={() => {\n              getEarnings();\n            }}\n          >\n            Earnings\n          </li>\n          <li\n            style={state.Expenses ? stye : null}\n            onClick={() => {\n              getExpenses();\n            }}\n          >\n            Expenses\n          </li>\n        </ul>\n      </div>\n      <div className=\"list\">\n        {!select.getActivities.transaction\n          ? null\n          : select.getActivities.transaction.map((e) => (\n              <li key={e.id}>{e.transaction_name}</li>\n            ))}\n      </div>\n    </Activity>\n  );\n};\n\nexport default Activities;\n"]},"metadata":{},"sourceType":"module"}