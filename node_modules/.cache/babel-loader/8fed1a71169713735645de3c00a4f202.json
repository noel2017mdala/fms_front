{"ast":null,"code":"import toast from \"toasted-notes\";\nimport \"toasted-notes/src/styles.css\";\nexport const FETCH_LOGIN = \"FETCH_LOGIN\";\nexport const FETCH_ACTIVITIES = \"FETCH_ACTIVITIES\";\nexport const FETCH_EARNINGS = \"FETCH_EARNINGS\";\nexport const FETCH_EXPENSES = \"FETCH_EXPENSES\";\nexport const FETCH_PROJECTS = \"FETCH_PROJECTS\";\nexport const CREATE_TRANSACTION = \"CREATE_TRANSACTION\";\nexport const FETCH_ALL_ACTIVITIES = \"FETCH _ALL_ACTIVITIES\";\nexport const DELETE_ACTIVITY = \"DELETE_ACTIVITY\";\nexport const CREATE_PROJECTS = \"CREATE_PROJECTS\";\nexport const VIEW_PROJECTS = \"VIEW_PROJECTS\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\nexport const login = e => {\n  let url = \"http://127.0.0.1:8000/api/login\";\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  });\n  const request = new Request(url, {\n    method: \"POST\",\n    headers: headers,\n    body: JSON.stringify(e)\n  });\n  return async dispatch => {\n    try {\n      const response = await fetch(request);\n      const resData = await response.json();\n\n      if (resData[\"state\"]) {\n        dispatch({\n          type: FETCH_LOGIN,\n          payLoad: resData\n        });\n      } else {\n        toast.notify(\"Incorrect Email or Password\", {\n          duration: 5000\n        });\n        dispatch({\n          type: FETCH_LOGIN,\n          payLoad: resData\n        });\n      }\n    } catch (e) {\n      toast.notify(\"Please check you internet connection and try again later\", {\n        duration: 5000\n      });\n      dispatch({\n        type: FETCH_LOGIN,\n        payLoad: {}\n      });\n    }\n  };\n};\nexport const createTransaction = (e, token) => {\n  let url = \"http://127.0.0.1:8000/api/createtransaction\";\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${token}`\n  });\n  const request = new Request(url, {\n    method: \"POST\",\n    headers: headers,\n    body: JSON.stringify(e)\n  });\n  return async dispatch => {\n    try {\n      const response = await fetch(request);\n      const resData = await response.json();\n\n      if (resData[\"state\"]) {\n        toast.notify(\"transaction created successfully\", {\n          duration: 5000\n        });\n        dispatch({\n          type: CREATE_TRANSACTION,\n          payLoad: resData\n        });\n      }\n    } catch {\n      toast.notify(\"Please check you internet connection and try again later\", {\n        duration: 5000\n      });\n      dispatch({\n        type: CREATE_TRANSACTION,\n        payLoad: {}\n      });\n    }\n  };\n};\nexport const activitiesAction = e => {\n  let url = `http://127.0.0.1:8000/api/transaction/limit/${e.id}`;\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${e.token}`\n  });\n  const request = new Request(url, {\n    method: \"GET\",\n    headers: headers\n  });\n  return async dispatch => {\n    try {\n      const response = await fetch(request);\n      const resData = await response.json();\n\n      if (resData[\"state\"]) {\n        dispatch({\n          type: FETCH_ACTIVITIES,\n          payLoad: resData\n        });\n      }\n    } catch (e) {\n      toast.notify(\"Please check you internet connection and try again later\", {\n        duration: 5000\n      });\n      dispatch({\n        type: FETCH_ACTIVITIES,\n        payLoad: {}\n      });\n    }\n  };\n};\nexport const allActivities = e => {\n  let url = `http://127.0.0.1:8000/api/transaction/all/${e.id}`;\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${e.token}`\n  });\n  const request = new Request(url, {\n    method: \"GET\",\n    headers: headers\n  });\n  return async dispatch => {\n    try {\n      const response = await fetch(request);\n      const resData = await response.json();\n\n      if (resData[\"state\"]) {\n        dispatch({\n          type: FETCH_ALL_ACTIVITIES,\n          payLoad: resData\n        });\n      }\n    } catch (e) {\n      toast.notify(\"Please check you internet connection and try again later\", {\n        duration: 5000\n      });\n      dispatch({\n        type: FETCH_ALL_ACTIVITIES,\n        payLoad: {}\n      });\n    }\n  };\n};\nexport const getEarnings = e => {\n  let url = `http://127.0.0.1:8000/api/earnings/${e.id}`;\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${e.token}`\n  });\n  const request = new Request(url, {\n    method: \"GET\",\n    headers: headers\n  });\n  return async dispatch => {\n    try {\n      const response = await fetch(request);\n      const resData = await response.json();\n\n      if (resData[\"state\"]) {\n        dispatch({\n          type: FETCH_EARNINGS,\n          payLoad: resData\n        });\n      }\n    } catch (e) {\n      toast.notify(\"Please check you internet connection and try again later\", {\n        duration: 5000\n      });\n      dispatch({\n        type: FETCH_EARNINGS,\n        payLoad: {}\n      });\n    }\n  };\n};\nexport const getExpenses = e => {\n  let url = `http://127.0.0.1:8000/api/expences/${e.id}`;\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${e.token}`\n  });\n  const request = new Request(url, {\n    method: \"GET\",\n    headers: headers\n  });\n  return async dispatch => {\n    try {\n      const response = await fetch(request);\n      const resData = await response.json();\n\n      if (resData[\"state\"]) {\n        dispatch({\n          type: FETCH_EXPENSES,\n          payLoad: resData\n        });\n      }\n    } catch {\n      toast.notify(\"Please check you internet connection and try again later\", {\n        duration: 5000\n      });\n      dispatch({\n        type: FETCH_EARNINGS,\n        payLoad: {}\n      });\n    }\n  };\n};\nexport const getProjects = e => {\n  let url = \"http://127.0.0.1:8000/api/projects\";\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${e.token}`\n  });\n  const request = new Request(url, {\n    method: \"GET\",\n    headers: headers\n  });\n  return async dispatch => {\n    try {\n      const response = await fetch(request);\n      const resData = await response.json();\n\n      if (resData[\"state\"]) {\n        dispatch({\n          type: FETCH_PROJECTS,\n          payLoad: resData\n        });\n      }\n    } catch {\n      toast.notify(\"Please check you internet connection and try again later\", {\n        duration: 5000\n      });\n      dispatch({\n        type: FETCH_PROJECTS,\n        payLoad: {}\n      });\n    }\n  };\n};\nexport const deleteActivity = e => {\n  let url = `http://127.0.0.1:8000/api/deletetransaction/${e.userData.id}/${e.id}`;\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${e.userData.token}`\n  });\n  const request = new Request(url, {\n    method: \"GET\",\n    headers: headers\n  });\n  return async dispatch => {\n    console.log(dispatch);\n\n    try {\n      const response = await fetch(request);\n      const resData = await response.json();\n\n      if (resData[\"state\"]) {\n        toast.notify(\"Activity deleted successfuly\", {\n          duration: 5000\n        }); // dispatch({ type: DELETE_ACTIVITY, payLoad: resData });\n        // dispatch({ type: FETCH_ALL_ACTIVITIES, payLoad: resData });\n      } else {\n        toast.notify(\"Faied to delete activity\", {\n          duration: 5000\n        });\n      }\n    } catch {\n      toast.notify(\"Please check you internet connection and try again later\", {\n        duration: 5000\n      }); // dispatch({ type: DELETE_ACTIVITY, payLoad: {} });\n    }\n  };\n};\nexport const createproject = e => {\n  let url = `http://127.0.0.1:8000/api/createproject`;\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${e.token}`\n  });\n  const request = new Request(url, {\n    method: \"POST\",\n    headers: headers,\n    body: JSON.stringify(e)\n  });\n  return async dispatch => {\n    try {\n      const response = await fetch(request);\n      const resData = await response.json();\n      console.log(resData);\n\n      if (resData[\"state\"]) {\n        toast.notify(\"Project created successfuly\", {\n          duration: 5000\n        });\n        dispatch({\n          type: CREATE_PROJECTS,\n          payLoad: resData\n        });\n      }\n    } catch {\n      toast.notify(\"Please check you internet connection and try again later\", {\n        duration: 5000\n      });\n      dispatch({\n        type: CREATE_PROJECTS,\n        payLoad: {}\n      });\n    }\n  };\n};\nexport const viewprojects = e => {\n  let url = `http://127.0.0.1:8000/api/viewprojects/${e.id}`;\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${e.token}`\n  });\n  const request = new Request(url, {\n    method: \"GET\",\n    headers: headers\n  });\n  return async dispatch => {\n    try {\n      const response = await fetch(request);\n      const resData = await response.json();\n\n      if (resData[\"state\"]) {\n        dispatch({\n          type: VIEW_PROJECTS,\n          payLoad: resData\n        });\n      }\n    } catch (e) {\n      toast.notify(\"Please check you internet connection and try again later\", {\n        duration: 5000\n      });\n      dispatch({\n        type: VIEW_PROJECTS,\n        payLoad: {}\n      });\n    }\n  };\n};\nexport const deleteProject = e => {\n  let url = `http://127.0.0.1:8000/api/deletetransaction/${e.userData.id}/${e.id}`;\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${e.userData.token}`\n  });\n  const request = new Request(url, {\n    method: \"GET\",\n    headers: headers\n  });\n  return async dispatch => {\n    console.log(dispatch);\n\n    try {\n      const response = await fetch(request);\n      const resData = await response.json();\n\n      if (resData[\"state\"]) {\n        toast.notify(\"Activity deleted successfuly\", {\n          duration: 5000\n        }); // dispatch({ type: DELETE_ACTIVITY, payLoad: resData });\n        // dispatch({ type: FETCH_ALL_ACTIVITIES, payLoad: resData });\n      } else {\n        toast.notify(\"Faied to delete activity\", {\n          duration: 5000\n        });\n      }\n    } catch {\n      toast.notify(\"Please check you internet connection and try again later\", {\n        duration: 5000\n      }); // dispatch({ type: DELETE_ACTIVITY, payLoad: {} });\n    }\n  };\n};","map":{"version":3,"sources":["/home/abel/fms_front/src/redux/actions/actionCreator.js"],"names":["toast","FETCH_LOGIN","FETCH_ACTIVITIES","FETCH_EARNINGS","FETCH_EXPENSES","FETCH_PROJECTS","CREATE_TRANSACTION","FETCH_ALL_ACTIVITIES","DELETE_ACTIVITY","CREATE_PROJECTS","VIEW_PROJECTS","DELETE_PROJECT","login","e","url","headers","Headers","Accept","request","Request","method","body","JSON","stringify","dispatch","response","fetch","resData","json","type","payLoad","notify","duration","createTransaction","token","Authorization","activitiesAction","id","allActivities","getEarnings","getExpenses","getProjects","deleteActivity","userData","console","log","createproject","viewprojects","deleteProject"],"mappings":"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","sourcesContent":["import toast from \"toasted-notes\";\nimport \"toasted-notes/src/styles.css\";\nexport const FETCH_LOGIN = \"FETCH_LOGIN\";\nexport const FETCH_ACTIVITIES = \"FETCH_ACTIVITIES\";\nexport const FETCH_EARNINGS = \"FETCH_EARNINGS\";\nexport const FETCH_EXPENSES = \"FETCH_EXPENSES\";\nexport const FETCH_PROJECTS = \"FETCH_PROJECTS\";\nexport const CREATE_TRANSACTION = \"CREATE_TRANSACTION\";\nexport const FETCH_ALL_ACTIVITIES = \"FETCH _ALL_ACTIVITIES\";\nexport const DELETE_ACTIVITY = \"DELETE_ACTIVITY\";\nexport const CREATE_PROJECTS = \"CREATE_PROJECTS\";\nexport const VIEW_PROJECTS = \"VIEW_PROJECTS\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\nexport const login = (e) => {\n  let url = \"http://127.0.0.1:8000/api/login\";\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n  });\n  const request = new Request(url, {\n    method: \"POST\",\n    headers: headers,\n    body: JSON.stringify(e),\n  });\n\n  return async (dispatch) => {\n    try {\n      const response = await fetch(request);\n      const resData = await response.json();\n      if (resData[\"state\"]) {\n        dispatch({ type: FETCH_LOGIN, payLoad: resData });\n      } else {\n        toast.notify(\"Incorrect Email or Password\", {\n          duration: 5000,\n        });\n\n        dispatch({ type: FETCH_LOGIN, payLoad: resData });\n      }\n    } catch (e) {\n      toast.notify(\"Please check you internet connection and try again later\", {\n        duration: 5000,\n      });\n      dispatch({ type: FETCH_LOGIN, payLoad: {} });\n    }\n  };\n};\n\nexport const createTransaction = (e, token) => {\n  let url = \"http://127.0.0.1:8000/api/createtransaction\";\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${token}`,\n  });\n  const request = new Request(url, {\n    method: \"POST\",\n    headers: headers,\n    body: JSON.stringify(e),\n  });\n\n  return async (dispatch) => {\n    try {\n      const response = await fetch(request);\n      const resData = await response.json();\n\n      if (resData[\"state\"]) {\n        toast.notify(\"transaction created successfully\", {\n          duration: 5000,\n        });\n        dispatch({ type: CREATE_TRANSACTION, payLoad: resData });\n      }\n    } catch {\n      toast.notify(\"Please check you internet connection and try again later\", {\n        duration: 5000,\n      });\n      dispatch({ type: CREATE_TRANSACTION, payLoad: {} });\n    }\n  };\n};\nexport const activitiesAction = (e) => {\n  let url = `http://127.0.0.1:8000/api/transaction/limit/${e.id}`;\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${e.token}`,\n  });\n  const request = new Request(url, {\n    method: \"GET\",\n    headers: headers,\n  });\n\n  return async (dispatch) => {\n    try {\n      const response = await fetch(request);\n      const resData = await response.json();\n      if (resData[\"state\"]) {\n        dispatch({ type: FETCH_ACTIVITIES, payLoad: resData });\n      }\n    } catch (e) {\n      toast.notify(\"Please check you internet connection and try again later\", {\n        duration: 5000,\n      });\n      dispatch({ type: FETCH_ACTIVITIES, payLoad: {} });\n    }\n  };\n};\n\nexport const allActivities = (e) => {\n  let url = `http://127.0.0.1:8000/api/transaction/all/${e.id}`;\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${e.token}`,\n  });\n  const request = new Request(url, {\n    method: \"GET\",\n    headers: headers,\n  });\n  return async (dispatch) => {\n    try {\n      const response = await fetch(request);\n      const resData = await response.json();\n      if (resData[\"state\"]) {\n        dispatch({ type: FETCH_ALL_ACTIVITIES, payLoad: resData });\n      }\n    } catch (e) {\n      toast.notify(\"Please check you internet connection and try again later\", {\n        duration: 5000,\n      });\n      dispatch({ type: FETCH_ALL_ACTIVITIES, payLoad: {} });\n    }\n  };\n};\n\nexport const getEarnings = (e) => {\n  let url = `http://127.0.0.1:8000/api/earnings/${e.id}`;\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${e.token}`,\n  });\n  const request = new Request(url, {\n    method: \"GET\",\n    headers: headers,\n  });\n\n  return async (dispatch) => {\n    try {\n      const response = await fetch(request);\n      const resData = await response.json();\n      if (resData[\"state\"]) {\n        dispatch({ type: FETCH_EARNINGS, payLoad: resData });\n      }\n    } catch (e) {\n      toast.notify(\"Please check you internet connection and try again later\", {\n        duration: 5000,\n      });\n      dispatch({ type: FETCH_EARNINGS, payLoad: {} });\n    }\n  };\n};\n\nexport const getExpenses = (e) => {\n  let url = `http://127.0.0.1:8000/api/expences/${e.id}`;\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${e.token}`,\n  });\n  const request = new Request(url, {\n    method: \"GET\",\n    headers: headers,\n  });\n\n  return async (dispatch) => {\n    try {\n      const response = await fetch(request);\n      const resData = await response.json();\n      if (resData[\"state\"]) {\n        dispatch({ type: FETCH_EXPENSES, payLoad: resData });\n      }\n    } catch {\n      toast.notify(\"Please check you internet connection and try again later\", {\n        duration: 5000,\n      });\n      dispatch({ type: FETCH_EARNINGS, payLoad: {} });\n    }\n  };\n};\n\nexport const getProjects = (e) => {\n  let url = \"http://127.0.0.1:8000/api/projects\";\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${e.token}`,\n  });\n  const request = new Request(url, {\n    method: \"GET\",\n    headers: headers,\n  });\n\n  return async (dispatch) => {\n    try {\n      const response = await fetch(request);\n      const resData = await response.json();\n      if (resData[\"state\"]) {\n        dispatch({ type: FETCH_PROJECTS, payLoad: resData });\n      }\n    } catch {\n      toast.notify(\"Please check you internet connection and try again later\", {\n        duration: 5000,\n      });\n      dispatch({ type: FETCH_PROJECTS, payLoad: {} });\n    }\n  };\n};\n\nexport const deleteActivity = (e) => {\n  let url = `http://127.0.0.1:8000/api/deletetransaction/${e.userData.id}/${e.id}`;\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${e.userData.token}`,\n  });\n  const request = new Request(url, {\n    method: \"GET\",\n    headers: headers,\n  });\n\n  return async (dispatch) => {\n    console.log(dispatch);\n    try {\n      const response = await fetch(request);\n      const resData = await response.json();\n      if (resData[\"state\"]) {\n        toast.notify(\"Activity deleted successfuly\", {\n          duration: 5000,\n        });\n        // dispatch({ type: DELETE_ACTIVITY, payLoad: resData });\n        // dispatch({ type: FETCH_ALL_ACTIVITIES, payLoad: resData });\n      } else {\n        toast.notify(\"Faied to delete activity\", {\n          duration: 5000,\n        });\n      }\n    } catch {\n      toast.notify(\"Please check you internet connection and try again later\", {\n        duration: 5000,\n      });\n      // dispatch({ type: DELETE_ACTIVITY, payLoad: {} });\n    }\n  };\n};\n\nexport const createproject = (e) => {\n  let url = `http://127.0.0.1:8000/api/createproject`;\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${e.token}`,\n  });\n  const request = new Request(url, {\n    method: \"POST\",\n    headers: headers,\n    body: JSON.stringify(e),\n  });\n\n  return async (dispatch) => {\n    try {\n      const response = await fetch(request);\n      const resData = await response.json();\n      console.log(resData);\n      if (resData[\"state\"]) {\n        toast.notify(\"Project created successfuly\", {\n          duration: 5000,\n        });\n        dispatch({ type: CREATE_PROJECTS, payLoad: resData });\n      }\n    } catch {\n      toast.notify(\"Please check you internet connection and try again later\", {\n        duration: 5000,\n      });\n      dispatch({ type: CREATE_PROJECTS, payLoad: {} });\n    }\n  };\n};\n\nexport const viewprojects = (e) => {\n  let url = `http://127.0.0.1:8000/api/viewprojects/${e.id}`;\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${e.token}`,\n  });\n  const request = new Request(url, {\n    method: \"GET\",\n    headers: headers,\n  });\n\n  return async (dispatch) => {\n    try {\n      const response = await fetch(request);\n      const resData = await response.json();\n      if (resData[\"state\"]) {\n        dispatch({ type: VIEW_PROJECTS, payLoad: resData });\n      }\n    } catch (e) {\n      toast.notify(\"Please check you internet connection and try again later\", {\n        duration: 5000,\n      });\n      dispatch({ type: VIEW_PROJECTS, payLoad: {} });\n    }\n  };\n};\n\nexport const deleteProject = (e) => {\n  let url = `http://127.0.0.1:8000/api/deletetransaction/${e.userData.id}/${e.id}`;\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${e.userData.token}`,\n  });\n  const request = new Request(url, {\n    method: \"GET\",\n    headers: headers,\n  });\n\n  return async (dispatch) => {\n    console.log(dispatch);\n    try {\n      const response = await fetch(request);\n      const resData = await response.json();\n      if (resData[\"state\"]) {\n        toast.notify(\"Activity deleted successfuly\", {\n          duration: 5000,\n        });\n        // dispatch({ type: DELETE_ACTIVITY, payLoad: resData });\n        // dispatch({ type: FETCH_ALL_ACTIVITIES, payLoad: resData });\n      } else {\n        toast.notify(\"Faied to delete activity\", {\n          duration: 5000,\n        });\n      }\n    } catch {\n      toast.notify(\"Please check you internet connection and try again later\", {\n        duration: 5000,\n      });\n      // dispatch({ type: DELETE_ACTIVITY, payLoad: {} });\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}