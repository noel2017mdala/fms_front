{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/abel/fms_front/src/components/Dashboard/balanceStats.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Cookies from \"universal-cookie\";\nimport { getBalance } from \"../../redux/actions/dashboard/balanceStat\";\nimport { Line } from \"react-chartjs-2\";\nimport { BalanceStats as Statistics } from \"../../styledComponents/Dashboard/BalanceStats\";\n\nconst BalanceStats = () => {\n  _s();\n\n  const select = useSelector(e => {\n    return e;\n  });\n  const dispatch = useDispatch();\n  const cookies = new Cookies();\n  let getUserInfo = cookies.get(\"user_info\")[0];\n  let getToken = cookies.get(\"auth_token\");\n  useEffect(() => {\n    dispatch(getBalance(getUserInfo, getToken));\n  }, [dispatch]);\n  let days = [];\n  let prevAmount = [];\n  console.log(select);\n  return /*#__PURE__*/_jsxDEV(Statistics, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: select.userBalance.map(e => {\n        return `Current Balance K ${e.Amount}`;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BalanceStats, \"zhyp/L3S3Fdp5da3Lh7W6T9O2to=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = BalanceStats;\nexport default BalanceStats;\n\nvar _c;\n\n$RefreshReg$(_c, \"BalanceStats\");","map":{"version":3,"sources":["/home/abel/fms_front/src/components/Dashboard/balanceStats.js"],"names":["React","useEffect","useDispatch","useSelector","Cookies","getBalance","Line","BalanceStats","Statistics","select","e","dispatch","cookies","getUserInfo","get","getToken","days","prevAmount","console","log","userBalance","map","Amount"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,UAAT,QAA2B,2CAA3B;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,YAAY,IAAIC,UAAzB,QAA2C,+CAA3C;;AAEA,MAAMD,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAME,MAAM,GAAGN,WAAW,CAAEO,CAAD,IAAO;AAChC,WAAOA,CAAP;AACD,GAFyB,CAA1B;AAIA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAEA,QAAMU,OAAO,GAAG,IAAIR,OAAJ,EAAhB;AACA,MAAIS,WAAW,GAAGD,OAAO,CAACE,GAAR,CAAY,WAAZ,EAAyB,CAAzB,CAAlB;AACA,MAAIC,QAAQ,GAAGH,OAAO,CAACE,GAAR,CAAY,YAAZ,CAAf;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACN,UAAU,CAACQ,WAAD,EAAcE,QAAd,CAAX,CAAR;AACD,GAFQ,EAEN,CAACJ,QAAD,CAFM,CAAT;AAIA,MAAIK,IAAI,GAAG,EAAX;AACA,MAAIC,UAAU,GAAG,EAAjB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AACA,sBACE,QAAC,UAAD;AAAA,2BACE;AAAA,gBACGA,MAAM,CAACW,WAAP,CAAmBC,GAAnB,CAAwBX,CAAD,IAAO;AAC7B,eAAQ,qBAAoBA,CAAC,CAACY,MAAO,EAArC;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CAtDD;;GAAMf,Y;UACWJ,W,EAIED,W;;;KALbK,Y;AAuDN,eAAeA,YAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Cookies from \"universal-cookie\";\nimport { getBalance } from \"../../redux/actions/dashboard/balanceStat\";\nimport { Line } from \"react-chartjs-2\";\nimport { BalanceStats as Statistics } from \"../../styledComponents/Dashboard/BalanceStats\";\n\nconst BalanceStats = () => {\n  const select = useSelector((e) => {\n    return e;\n  });\n\n  const dispatch = useDispatch();\n\n  const cookies = new Cookies();\n  let getUserInfo = cookies.get(\"user_info\")[0];\n  let getToken = cookies.get(\"auth_token\");\n\n  useEffect(() => {\n    dispatch(getBalance(getUserInfo, getToken));\n  }, [dispatch]);\n\n  let days = [];\n  let prevAmount = [];\n  console.log(select);\n  return (\n    <Statistics>\n      <p>\n        {select.userBalance.map((e) => {\n          return `Current Balance K ${e.Amount}`;\n        })}\n      </p>\n      {/* <Line\n        data={{\n          labels: [...days],\n          datasets: [\n            {\n              label: \"Transaction\",\n              data: [...prevAmount],\n              backgroundColor: [\"rgba(102, 163, 255, 0.6)\"],\n              borderWidth: 1,\n            },\n          ],\n        }}\n        height={100}\n        width={200}\n        options={{\n          maintainAspectRatio: false,\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  beginAtZero: true,\n                },\n              },\n            ],\n          },\n        }}\n      /> */}\n    </Statistics>\n  );\n};\nexport default BalanceStats;\n"]},"metadata":{},"sourceType":"module"}