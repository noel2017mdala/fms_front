{"ast":null,"code":"import toast from \"toasted-notes\";\nimport \"toasted-notes/src/styles.css\";\nexport const FETCH_LOGIN = \"FETCH_LOGIN\";\nexport const FETCH_ACTIVITIES = \"FETCH_ACTIVITIES\";\nexport const FETCH_EARNINGS = \"FETCH_EARNINGS\";\nexport const FETCH_EXPENSES = \"FETCH_EXPENSES\";\nexport const FETCH_PROJECTS = \"FETCH_PROJECTS\";\nexport const login = e => {\n  let url = \"http://127.0.0.1:8000/api/login\";\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  });\n  const request = new Request(url, {\n    method: \"POST\",\n    headers: headers,\n    body: JSON.stringify(e)\n  });\n  return async dispatch => {\n    console.log(dispatch);\n\n    try {\n      const response = await fetch(request);\n      const resData = await response.json();\n\n      if (resData[\"state\"]) {\n        dispatch({\n          type: FETCH_LOGIN,\n          payLoad: resData\n        });\n      } else {\n        toast.notify(\"Incorrect Email or Password\", {\n          duration: 5000\n        });\n        dispatch({\n          type: FETCH_LOGIN,\n          payLoad: resData\n        });\n      }\n    } catch (e) {\n      toast.notify(\"Please check you internet connection and try again later\", {\n        duration: 5000\n      });\n      dispatch({\n        type: FETCH_LOGIN,\n        payLoad: {}\n      });\n    }\n  };\n};\nexport const activitiesAction = e => {\n  let url = \"http://127.0.0.1:8000/api/transaction\";\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${e.token}`\n  });\n  const request = new Request(url, {\n    method: \"GET\",\n    headers: headers\n  });\n  return async dispatch => {\n    try {\n      const response = await fetch(request);\n      const resData = await response.json();\n\n      if (resData[\"state\"]) {\n        dispatch({\n          type: FETCH_ACTIVITIES,\n          payLoad: resData\n        });\n      }\n    } catch (e) {\n      toast.notify(\"Please check you internet connection and try again later\", {\n        duration: 5000\n      });\n      dispatch({\n        type: FETCH_ACTIVITIES,\n        payLoad: {}\n      });\n    }\n  };\n};\nexport const getEarnings = e => {\n  let url = \"http://127.0.0.1:8000/api/earnings\";\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${e.token}`\n  });\n  const request = new Request(url, {\n    method: \"GET\",\n    headers: headers\n  });\n  return async dispatch => {\n    try {\n      const response = await fetch(request);\n      const resData = await response.json();\n\n      if (resData[\"state\"]) {\n        dispatch({\n          type: FETCH_EARNINGS,\n          payLoad: resData\n        });\n      }\n    } catch (e) {\n      toast.notify(\"Please check you internet connection and try again later\", {\n        duration: 5000\n      });\n      dispatch({\n        type: FETCH_EARNINGS,\n        payLoad: {}\n      });\n    }\n  };\n};\nexport const getExpenses = e => {\n  let url = \"http://127.0.0.1:8000/api/expences\";\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${e.token}`\n  });\n  const request = new Request(url, {\n    method: \"GET\",\n    headers: headers\n  });\n  return async dispatch => {\n    try {\n      const response = await fetch(request);\n      const resData = await response.json();\n\n      if (resData[\"state\"]) {\n        dispatch({\n          type: FETCH_EXPENSES,\n          payLoad: resData\n        });\n      }\n    } catch {\n      toast.notify(\"Please check you internet connection and try again later\", {\n        duration: 5000\n      });\n      dispatch({\n        type: FETCH_EARNINGS,\n        payLoad: {}\n      });\n    }\n  };\n};\nexport const getProjects = e => {\n  let url = \"http://127.0.0.1:8000/api/projects\";\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${e.token}`\n  });\n  const request = new Request(url, {\n    method: \"GET\",\n    headers: headers\n  });\n  return async dispatch => {\n    try {\n      const response = await fetch(request);\n      const resData = await response.json();\n\n      if (resData[\"state\"]) {\n        dispatch({\n          type: FETCH_PROJECTS,\n          payLoad: resData\n        });\n      }\n    } catch {\n      toast.notify(\"Please check you internet connection and try again later\", {\n        duration: 5000\n      });\n      dispatch({\n        type: FETCH_PROJECTS,\n        payLoad: {}\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/home/abel/fms_front/src/redux/actions/actionCreator.js"],"names":["toast","FETCH_LOGIN","FETCH_ACTIVITIES","FETCH_EARNINGS","FETCH_EXPENSES","FETCH_PROJECTS","login","e","url","headers","Headers","Accept","request","Request","method","body","JSON","stringify","dispatch","console","log","response","fetch","resData","json","type","payLoad","notify","duration","activitiesAction","Authorization","token","getEarnings","getExpenses","getProjects"],"mappings":"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","sourcesContent":["import toast from \"toasted-notes\";\nimport \"toasted-notes/src/styles.css\";\nexport const FETCH_LOGIN = \"FETCH_LOGIN\";\nexport const FETCH_ACTIVITIES = \"FETCH_ACTIVITIES\";\nexport const FETCH_EARNINGS = \"FETCH_EARNINGS\";\nexport const FETCH_EXPENSES = \"FETCH_EXPENSES\";\nexport const FETCH_PROJECTS = \"FETCH_PROJECTS\";\n\nexport const login = (e) => {\n  let url = \"http://127.0.0.1:8000/api/login\";\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n  });\n  const request = new Request(url, {\n    method: \"POST\",\n    headers: headers,\n    body: JSON.stringify(e),\n  });\n\n  return async (dispatch) => {\n    console.log(dispatch);\n    try {\n      const response = await fetch(request);\n      const resData = await response.json();\n      if (resData[\"state\"]) {\n        dispatch({ type: FETCH_LOGIN, payLoad: resData });\n      } else {\n        toast.notify(\"Incorrect Email or Password\", {\n          duration: 5000,\n        });\n\n        dispatch({ type: FETCH_LOGIN, payLoad: resData });\n      }\n    } catch (e) {\n      toast.notify(\"Please check you internet connection and try again later\", {\n        duration: 5000,\n      });\n      dispatch({ type: FETCH_LOGIN, payLoad: {} });\n    }\n  };\n};\n\nexport const activitiesAction = (e) => {\n  let url = \"http://127.0.0.1:8000/api/transaction\";\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${e.token}`,\n  });\n  const request = new Request(url, {\n    method: \"GET\",\n    headers: headers,\n  });\n\n  return async (dispatch) => {\n    try {\n      const response = await fetch(request);\n      const resData = await response.json();\n      if (resData[\"state\"]) {\n        dispatch({ type: FETCH_ACTIVITIES, payLoad: resData });\n      }\n    } catch (e) {\n      toast.notify(\"Please check you internet connection and try again later\", {\n        duration: 5000,\n      });\n      dispatch({ type: FETCH_ACTIVITIES, payLoad: {} });\n    }\n  };\n};\n\nexport const getEarnings = (e) => {\n  let url = \"http://127.0.0.1:8000/api/earnings\";\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${e.token}`,\n  });\n  const request = new Request(url, {\n    method: \"GET\",\n    headers: headers,\n  });\n\n  return async (dispatch) => {\n    try {\n      const response = await fetch(request);\n      const resData = await response.json();\n      if (resData[\"state\"]) {\n        dispatch({ type: FETCH_EARNINGS, payLoad: resData });\n      }\n    } catch (e) {\n      toast.notify(\"Please check you internet connection and try again later\", {\n        duration: 5000,\n      });\n      dispatch({ type: FETCH_EARNINGS, payLoad: {} });\n    }\n  };\n};\n\nexport const getExpenses = (e) => {\n  let url = \"http://127.0.0.1:8000/api/expences\";\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${e.token}`,\n  });\n  const request = new Request(url, {\n    method: \"GET\",\n    headers: headers,\n  });\n\n  return async (dispatch) => {\n    try {\n      const response = await fetch(request);\n      const resData = await response.json();\n      if (resData[\"state\"]) {\n        dispatch({ type: FETCH_EXPENSES, payLoad: resData });\n      }\n    } catch {\n      toast.notify(\"Please check you internet connection and try again later\", {\n        duration: 5000,\n      });\n      dispatch({ type: FETCH_EARNINGS, payLoad: {} });\n    }\n  };\n};\n\nexport const getProjects = (e) => {\n  let url = \"http://127.0.0.1:8000/api/projects\";\n  const headers = new Headers({\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${e.token}`,\n  });\n  const request = new Request(url, {\n    method: \"GET\",\n    headers: headers,\n  });\n\n  return async (dispatch) => {\n    try {\n      const response = await fetch(request);\n      const resData = await response.json();\n      if (resData[\"state\"]) {\n        dispatch({ type: FETCH_PROJECTS, payLoad: resData });\n      }\n    } catch {\n      toast.notify(\"Please check you internet connection and try again later\", {\n        duration: 5000,\n      });\n      dispatch({ type: FETCH_PROJECTS, payLoad: {} });\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}