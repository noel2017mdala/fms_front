{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/abel/fms_front/src/components/Dashboard/Modals/CeateTransactionModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createTransaction } from \"../../../redux/actions/dashboard/activities\";\nimport { getAmount, getBalance } from \"../../../redux/actions/dashboard/balanceStat\";\nimport { activitiesAction } from \"../../../redux/actions/dashboard/activities\";\nimport toast from \"toasted-notes\";\nimport Cookies from \"universal-cookie\";\nimport { Container } from \"../../../styledComponents/Dashboard/Modals/createTransactionModal\";\n\nconst CreateTransaction = ({\n  state,\n  setState\n}) => {\n  _s();\n\n  // user cookies\n  const cookies = new Cookies(); // action dispatcher\n\n  const dispatch = useDispatch();\n  /*\n  internal state\n  for handling user submitted value\n  */\n\n  const [userValue, getValue] = useState({\n    transaction_name: \"\",\n    transaction_ammount: \"\",\n    transaction_type: \"\"\n  });\n\n  const handleSubmit = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    getValue(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n  /*\n  form validator \n  before submitting\n  */\n\n\n  const validate_input = () => {\n    const {\n      transaction_name,\n      transaction_ammount,\n      transaction_type\n    } = userValue;\n\n    if (transaction_name === \"\" || transaction_ammount === \"\" || transaction_type === \"\") {\n      toast.notify(\"All values are required\");\n    } else if (transaction_name && transaction_ammount && transaction_type === \"\") {\n      toast.notify(\"values can never be empty \");\n    } else if (transaction_ammount < 1) {\n      toast.notify(\"Values must be greater than zero\");\n    } else {\n      let data = { ...userValue,\n        transaction_by: cookies.get(\"user_info\")[0].id\n      };\n      const getDispatch = dispatch(createTransaction(data, cookies.get(\"auth_token\")));\n\n      if (getDispatch) {\n        // re-render components\n        let getUserInfo = cookies.get(\"user_info\")[0];\n        let getToken = cookies.get(\"auth_token\");\n        dispatch(getBalance(getUserInfo, getToken));\n        dispatch(getAmount(getUserInfo, getToken));\n        dispatch(activitiesAction({\n          token: getToken,\n          id: getUserInfo\n        }));\n      } // setTimeout(toggleModal, 2000);\n\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"closeModal\",\n          onClick: e => {\n            e.preventDefault();\n            setState(prevState => ({ ...prevState,\n              showModal: false\n            }));\n          },\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"header\",\n          children: \"Create Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userValue\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"transaction name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"transaction_name\",\n              placeholder: \"Transaction Name\",\n              onChange: handleSubmit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"transaction amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"transaction_ammount\",\n              placeholder: \"Transaction Amount\",\n              onChange: handleSubmit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Transaction type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"transaction_type\",\n              onChange: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"select\",\n                children: \"Select Transaction\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"income\",\n                children: \"Income\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"expenditure\",\n                children: \"Expenditure\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"create\",\n                onClick: e => {\n                  e.preventDefault();\n                  validate_input();\n                },\n                children: \"Create Transaction\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"cancel\",\n                onClick: e => {\n                  e.preventDefault();\n                  setState(prevState => ({ ...prevState,\n                    showModal: false\n                  }));\n                },\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateTransaction, \"jkgrOAVRGdceekR/gdkPpEkdWqE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CreateTransaction;\nexport default CreateTransaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTransaction\");","map":{"version":3,"sources":["/home/abel/fms_front/src/components/Dashboard/Modals/CeateTransactionModal.js"],"names":["React","useState","useDispatch","useSelector","createTransaction","getAmount","getBalance","activitiesAction","toast","Cookies","Container","CreateTransaction","state","setState","cookies","dispatch","userValue","getValue","transaction_name","transaction_ammount","transaction_type","handleSubmit","e","name","value","target","prevState","validate_input","notify","data","transaction_by","get","id","getDispatch","getUserInfo","getToken","token","preventDefault","showModal"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createTransaction } from \"../../../redux/actions/dashboard/activities\";\nimport {\n  getAmount,\n  getBalance,\n} from \"../../../redux/actions/dashboard/balanceStat\";\nimport { activitiesAction } from \"../../../redux/actions/dashboard/activities\";\nimport toast from \"toasted-notes\";\nimport Cookies from \"universal-cookie\";\n\nimport { Container } from \"../../../styledComponents/Dashboard/Modals/createTransactionModal\";\n\nconst CreateTransaction = ({ state, setState }) => {\n  // user cookies\n  const cookies = new Cookies();\n\n  // action dispatcher\n  const dispatch = useDispatch();\n\n  /*\n  internal state\n  for handling user submitted value\n  */\n  const [userValue, getValue] = useState({\n    transaction_name: \"\",\n    transaction_ammount: \"\",\n    transaction_type: \"\",\n  });\n\n  const handleSubmit = (e) => {\n    const { name, value } = e.target;\n    getValue((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  /*\n  form validator \n  before submitting\n  */\n\n  const validate_input = () => {\n    const {\n      transaction_name,\n      transaction_ammount,\n      transaction_type,\n    } = userValue;\n    if (\n      transaction_name === \"\" ||\n      transaction_ammount === \"\" ||\n      transaction_type === \"\"\n    ) {\n      toast.notify(\"All values are required\");\n    } else if (\n      transaction_name &&\n      transaction_ammount &&\n      transaction_type === \"\"\n    ) {\n      toast.notify(\"values can never be empty \");\n    } else if (transaction_ammount < 1) {\n      toast.notify(\"Values must be greater than zero\");\n    } else {\n      let data = {\n        ...userValue,\n        transaction_by: cookies.get(\"user_info\")[0].id,\n      };\n\n      const getDispatch = dispatch(\n        createTransaction(data, cookies.get(\"auth_token\"))\n      );\n      if (getDispatch) {\n        // re-render components\n        let getUserInfo = cookies.get(\"user_info\")[0];\n        let getToken = cookies.get(\"auth_token\");\n\n        dispatch(getBalance(getUserInfo, getToken));\n        dispatch(getAmount(getUserInfo, getToken));\n\n        dispatch(\n          activitiesAction({\n            token: getToken,\n            id: getUserInfo,\n          })\n        );\n      }\n      // setTimeout(toggleModal, 2000);\n    }\n  };\n  return (\n    <Container>\n      <div className=\"modalWrapper\">\n        <div className=\"modalContent\">\n          <div\n            className=\"closeModal\"\n            onClick={(e) => {\n              e.preventDefault();\n              setState((prevState) => ({\n                ...prevState,\n                showModal: false,\n              }));\n            }}\n          >\n            &times;\n          </div>\n          <h1 className=\"header\">Create Transaction</h1>\n          <div className=\"userValue\">\n            <form>\n              <label>transaction name</label>\n              <input\n                type=\"text\"\n                name=\"transaction_name\"\n                placeholder=\"Transaction Name\"\n                onChange={handleSubmit}\n              />\n              <label>transaction amount</label>\n              <input\n                type=\"number\"\n                name=\"transaction_ammount\"\n                placeholder=\"Transaction Amount\"\n                onChange={handleSubmit}\n              />\n              <label>Transaction type</label>\n              <select name=\"transaction_type\" onChange={handleSubmit}>\n                <option value=\"select\">Select Transaction</option>\n                <option value=\"income\">Income</option>\n                <option value=\"expenditure\">Expenditure</option>\n              </select>\n              <div className=\"buttons\">\n                <button\n                  className=\"create\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    validate_input();\n                  }}\n                >\n                  Create Transaction\n                </button>\n                <button\n                  className=\"cancel\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    setState((prevState) => ({\n                      ...prevState,\n                      showModal: false,\n                    }));\n                  }}\n                >\n                  Cancel\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default CreateTransaction;\n"]},"metadata":{},"sourceType":"module"}