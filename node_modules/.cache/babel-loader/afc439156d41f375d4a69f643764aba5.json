{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/abel/fms_front/src/components/Dashboard/Modals/CeateTransactionModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { createTransaction } from \"../../../redux/actions/actionCreator\";\nimport toast from \"toasted-notes\";\nimport Cookies from \"universal-cookie\";\nimport { Container } from \"../../../styledComponents/Dashboard/Modals/createTransactionModal\";\n\nconst CreateTransaction = () => {\n  _s();\n\n  // user cookies\n  const cookies = new Cookies(); // action dispatcher\n\n  const dispatch = useDispatch();\n  /*\n  internal state\n  for handling user submitted value\n  */\n\n  const [userValue, getValue] = useState({\n    transaction_name: \"\",\n    transaction_amount: \"\",\n    transaction_type: \"\"\n  });\n\n  const handleSubmit = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    getValue(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n  /*\n  form validator \n  before submitting\n  */\n\n\n  const validate_input = () => {\n    const {\n      transaction_name,\n      transaction_amount,\n      transaction_type\n    } = userValue;\n\n    if (transaction_name === \"\" || transaction_amount === \"\" || transaction_type === \"\") {\n      toast.notify(\"All values are required\");\n    } else if (transaction_name && transaction_amount && transaction_type === \"\") {\n      toast.notify(\"values can never be empty \");\n    } else {\n      let data = { ...userValue,\n        transaction_by: cookies.get(\"user info\")[0].id\n      };\n      dispatch(createTransaction(data, cookies.get(\"login\"))); // setTimeout(toggleModal, 2000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"closeModal\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"header\",\n          children: \"Create Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userValue\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"transaction name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"transaction_name\",\n              placeholder: \"Transaction Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"transaction amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"transaction_ammount\",\n              placeholder: \"Transaction Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Transaction type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"transaction_type\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"select\",\n                children: \"Select Transaction\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"income\",\n                children: \"Income\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"expenditure\",\n                children: \"Expenditure\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"create\",\n                children: \"Create Transaction\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"cancel\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateTransaction, \"eKdEtz7Ah8iZzDYPzMYBzduRyRw=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CreateTransaction;\nexport default CreateTransaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTransaction\");","map":{"version":3,"sources":["/home/abel/fms_front/src/components/Dashboard/Modals/CeateTransactionModal.js"],"names":["React","useRef","useState","useDispatch","createTransaction","toast","Cookies","Container","CreateTransaction","cookies","dispatch","userValue","getValue","transaction_name","transaction_amount","transaction_type","handleSubmit","e","name","value","target","prevState","validate_input","notify","data","transaction_by","get","id"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { createTransaction } from \"../../../redux/actions/actionCreator\";\nimport toast from \"toasted-notes\";\nimport Cookies from \"universal-cookie\";\n\nimport { Container } from \"../../../styledComponents/Dashboard/Modals/createTransactionModal\";\n\nconst CreateTransaction = () => {\n  // user cookies\n  const cookies = new Cookies();\n\n  // action dispatcher\n  const dispatch = useDispatch();\n\n  /*\n  internal state\n  for handling user submitted value\n  */\n  const [userValue, getValue] = useState({\n    transaction_name: \"\",\n    transaction_amount: \"\",\n    transaction_type: \"\",\n  });\n\n  const handleSubmit = (e) => {\n    const { name, value } = e.target;\n    getValue((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  /*\n  form validator \n  before submitting\n  */\n\n  const validate_input = () => {\n    const {\n      transaction_name,\n      transaction_amount,\n      transaction_type,\n    } = userValue;\n    if (\n      transaction_name === \"\" ||\n      transaction_amount === \"\" ||\n      transaction_type === \"\"\n    ) {\n      toast.notify(\"All values are required\");\n    } else if (\n      transaction_name &&\n      transaction_amount &&\n      transaction_type === \"\"\n    ) {\n      toast.notify(\"values can never be empty \");\n    } else {\n      let data = {\n        ...userValue,\n        transaction_by: cookies.get(\"user info\")[0].id,\n      };\n\n      dispatch(createTransaction(data, cookies.get(\"login\")));\n      // setTimeout(toggleModal, 2000);\n    }\n  };\n  return (\n    <Container>\n      <div className=\"modalWrapper\">\n        <div className=\"modalContent\">\n          <div className=\"closeModal\">&times;</div>\n          <h1 className=\"header\">Create Transaction</h1>\n          <div className=\"userValue\">\n            <form>\n              <label>transaction name</label>\n              <input\n                type=\"text\"\n                name=\"transaction_name\"\n                placeholder=\"Transaction Name\"\n              />\n              <label>transaction amount</label>\n              <input\n                type=\"number\"\n                name=\"transaction_ammount\"\n                placeholder=\"Transaction Amount\"\n              />\n              <label>Transaction type</label>\n              <select name=\"transaction_type\">\n                <option value=\"select\">Select Transaction</option>\n                <option value=\"income\">Income</option>\n                <option value=\"expenditure\">Expenditure</option>\n              </select>\n              <div className=\"buttons\">\n                <button className=\"create\">Create Transaction</button>\n                <button className=\"cancel\">Cancel</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default CreateTransaction;\n"]},"metadata":{},"sourceType":"module"}