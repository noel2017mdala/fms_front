{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/abel/fms_front/src/components/Dashboard/Modals/listTransactionModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { allActivities } from \"../../../redux/actions/actionCreator\";\nimport Cookies from \"universal-cookie\";\nimport Bin from \"../../../images/bin.png\";\nimport DeleteModal from \"./DeleteModal\";\nimport \"../../../styledComponents/Dashboard/Modals/listTransactionsModal\";\nimport { deleteActivity as Delete } from \"../../../redux/actions/actionCreator\";\n\nconst ListTransactions = ({\n  state,\n  setState\n}) => {\n  _s();\n\n  const cookie = new Cookies();\n  let userInfo = cookie.get(\"user_info\");\n  const token = cookie.get(\"auth_token\");\n  let userData = {\n    token: token,\n    id: userInfo[0].id\n  };\n  const dispatch = useDispatch();\n  const select = useSelector(e => {\n    return e;\n  });\n  const [modalState, showModal] = useState({\n    showDeleteModal: false,\n    id: \"\",\n    userData: userData\n  });\n  const override = `\n    display: block;\n    margin: 0 auto;\n    border-color: black;\n    margin-top: 10px;\n        `;\n  useEffect(() => {\n    dispatch(allActivities(userData));\n  }, [dispatch]);\n\n  const deleteActivity = data => {\n    showModal(prevstate => ({ ...prevstate,\n      showDeleteModal: !modalState.showDeleteModal,\n      id: data\n    }));\n  };\n\n  const getDate = e => {\n    let date = new Date(e);\n    return date.toDateString();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Hello Transactions\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 10\n  }, this);\n};\n\n_s(ListTransactions, \"16k69bQL+SGIqZ52n3kAc2sFDEE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ListTransactions;\nexport default ListTransactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTransactions\");","map":{"version":3,"sources":["/home/abel/fms_front/src/components/Dashboard/Modals/listTransactionModal.js"],"names":["React","useEffect","useState","ClipLoader","useDispatch","useSelector","allActivities","Cookies","Bin","DeleteModal","deleteActivity","Delete","ListTransactions","state","setState","cookie","userInfo","get","token","userData","id","dispatch","select","e","modalState","showModal","showDeleteModal","override","data","prevstate","getDate","date","Date","toDateString"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,sCAA9B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,GAAP,MAAgB,yBAAhB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAe,kEAAf;AACA,SAASC,cAAc,IAAIC,MAA3B,QAAyC,sCAAzC;;AACA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AAAA;;AAChD,QAAMC,MAAM,GAAG,IAAIR,OAAJ,EAAf;AACA,MAAIS,QAAQ,GAAGD,MAAM,CAACE,GAAP,CAAW,WAAX,CAAf;AACA,QAAMC,KAAK,GAAGH,MAAM,CAACE,GAAP,CAAW,YAAX,CAAd;AACA,MAAIE,QAAQ,GAAG;AAAED,IAAAA,KAAK,EAAEA,KAAT;AAAgBE,IAAAA,EAAE,EAAEJ,QAAQ,CAAC,CAAD,CAAR,CAAYI;AAAhC,GAAf;AAEA,QAAMC,QAAQ,GAAGjB,WAAW,EAA5B;AACA,QAAMkB,MAAM,GAAGjB,WAAW,CAAEkB,CAAD,IAAO;AAChC,WAAOA,CAAP;AACD,GAFyB,CAA1B;AAIA,QAAM,CAACC,UAAD,EAAaC,SAAb,IAA0BvB,QAAQ,CAAC;AACvCwB,IAAAA,eAAe,EAAE,KADsB;AAEvCN,IAAAA,EAAE,EAAE,EAFmC;AAGvCD,IAAAA,QAAQ,EAAEA;AAH6B,GAAD,CAAxC;AAMA,QAAMQ,QAAQ,GAAI;AACpB;AACA;AACA;AACA;AACA,SALE;AAOA1B,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,QAAQ,CAACf,aAAa,CAACa,QAAD,CAAd,CAAR;AACD,GAFQ,EAEN,CAACE,QAAD,CAFM,CAAT;;AAIA,QAAMX,cAAc,GAAIkB,IAAD,IAAU;AAC/BH,IAAAA,SAAS,CAAEI,SAAD,KAAgB,EACxB,GAAGA,SADqB;AAExBH,MAAAA,eAAe,EAAE,CAACF,UAAU,CAACE,eAFL;AAGxBN,MAAAA,EAAE,EAAEQ;AAHoB,KAAhB,CAAD,CAAT;AAKD,GAND;;AAQA,QAAME,OAAO,GAAIP,CAAD,IAAO;AACrB,QAAIQ,IAAI,GAAG,IAAIC,IAAJ,CAAST,CAAT,CAAX;AACA,WAAOQ,IAAI,CAACE,YAAL,EAAP;AACD,GAHD;;AAKA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA1CD;;GAAMrB,gB;UAMaR,W,EACFC,W;;;KAPXO,gB;AA4CN,eAAeA,gBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { allActivities } from \"../../../redux/actions/actionCreator\";\nimport Cookies from \"universal-cookie\";\nimport Bin from \"../../../images/bin.png\";\nimport DeleteModal from \"./DeleteModal\";\nimport {} from \"../../../styledComponents/Dashboard/Modals/listTransactionsModal\";\nimport { deleteActivity as Delete } from \"../../../redux/actions/actionCreator\";\nconst ListTransactions = ({ state, setState }) => {\n  const cookie = new Cookies();\n  let userInfo = cookie.get(\"user_info\");\n  const token = cookie.get(\"auth_token\");\n  let userData = { token: token, id: userInfo[0].id };\n\n  const dispatch = useDispatch();\n  const select = useSelector((e) => {\n    return e;\n  });\n\n  const [modalState, showModal] = useState({\n    showDeleteModal: false,\n    id: \"\",\n    userData: userData,\n  });\n\n  const override = `\n    display: block;\n    margin: 0 auto;\n    border-color: black;\n    margin-top: 10px;\n        `;\n\n  useEffect(() => {\n    dispatch(allActivities(userData));\n  }, [dispatch]);\n\n  const deleteActivity = (data) => {\n    showModal((prevstate) => ({\n      ...prevstate,\n      showDeleteModal: !modalState.showDeleteModal,\n      id: data,\n    }));\n  };\n\n  const getDate = (e) => {\n    let date = new Date(e);\n    return date.toDateString();\n  };\n\n  return <div>Hello Transactions</div>;\n};\n\nexport default ListTransactions;\n"]},"metadata":{},"sourceType":"module"}