{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/abel/fms_front/src/components/Dashboard/Projects.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getProjects } from \"../../redux/actions/actionCreator\";\nimport projectStyle from \"../../styles/ProjectsStyle\";\n\nconst Projects = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const select = useSelector(e => {\n    return e;\n  });\n\n  const getDate = e => {\n    let date = new Date(e);\n    return date.toDateString();\n  };\n\n  const override = `\n  display: block;\n  margin: 0 auto;\n  border-color: black;\n  margin-top: 120px;\n      `;\n  useEffect(() => {\n    dispatch(getProjects(props));\n  }, [dispatch, props]);\n  return (\n    /*#__PURE__*/\n    // <div style={projectStyle.body}>\n    //   <h1 style={projectStyle.projects_h1}>Projects</h1>\n    //   <div>\n    //     {!select.projects.data ? (\n    //       <ClipLoader css={override} size=\"40px\" />\n    //     ) : !select.projects.data.projects ? (\n    //       <ClipLoader css={override} size=\"40px\" />\n    //     ) : (\n    //       select.projects.data.projects.map((e) => (\n    //         <div key={e.projects_id}>\n    //           <div style={projectStyle.projects_content}>\n    //             <p style={projectStyle.projects_p}>\n    //               {e.projects_name}\n    //               <span style={projectStyle.project_span}>\n    //                 {getDate(e.date_created)}\n    //               </span>\n    //             </p>\n    //           </div>\n    //         </div>\n    //       ))\n    //     )}\n    //   </div>\n    // </div>\n    _jsxDEV(\"div\", {\n      children: \"Hello Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(Projects, \"M0bnVij51e5Ju9/GUNPqa+eNaAM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/home/abel/fms_front/src/components/Dashboard/Projects.js"],"names":["React","useState","useEffect","ClipLoader","useDispatch","useSelector","getProjects","projectStyle","Projects","props","dispatch","select","e","getDate","date","Date","toDateString","override"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,mCAA5B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,MAAM,GAAGN,WAAW,CAAEO,CAAD,IAAO;AAChC,WAAOA,CAAP;AACD,GAFyB,CAA1B;;AAIA,QAAMC,OAAO,GAAID,CAAD,IAAO;AACrB,QAAIE,IAAI,GAAG,IAAIC,IAAJ,CAASH,CAAT,CAAX;AACA,WAAOE,IAAI,CAACE,YAAL,EAAP;AACD,GAHD;;AAKA,QAAMC,QAAQ,GAAI;AACpB;AACA;AACA;AACA;AACA,OALE;AAOAf,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CAACJ,WAAW,CAACG,KAAD,CAAZ,CAAR;AACD,GAFQ,EAEN,CAACC,QAAD,EAAWD,KAAX,CAFM,CAAT;AAGA;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAxBF;AA0BD,CA/CD;;GAAMD,Q;UACaJ,W,EACFC,W;;;KAFXG,Q;AAiDN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getProjects } from \"../../redux/actions/actionCreator\";\nimport projectStyle from \"../../styles/ProjectsStyle\";\n\nconst Projects = (props) => {\n  const dispatch = useDispatch();\n  const select = useSelector((e) => {\n    return e;\n  });\n\n  const getDate = (e) => {\n    let date = new Date(e);\n    return date.toDateString();\n  };\n\n  const override = `\n  display: block;\n  margin: 0 auto;\n  border-color: black;\n  margin-top: 120px;\n      `;\n\n  useEffect(() => {\n    dispatch(getProjects(props));\n  }, [dispatch, props]);\n  return (\n    // <div style={projectStyle.body}>\n    //   <h1 style={projectStyle.projects_h1}>Projects</h1>\n    //   <div>\n    //     {!select.projects.data ? (\n    //       <ClipLoader css={override} size=\"40px\" />\n    //     ) : !select.projects.data.projects ? (\n    //       <ClipLoader css={override} size=\"40px\" />\n    //     ) : (\n    //       select.projects.data.projects.map((e) => (\n    //         <div key={e.projects_id}>\n    //           <div style={projectStyle.projects_content}>\n    //             <p style={projectStyle.projects_p}>\n    //               {e.projects_name}\n    //               <span style={projectStyle.project_span}>\n    //                 {getDate(e.date_created)}\n    //               </span>\n    //             </p>\n    //           </div>\n    //         </div>\n    //       ))\n    //     )}\n    //   </div>\n    // </div>\n    <div>Hello Projects</div>\n  );\n};\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}