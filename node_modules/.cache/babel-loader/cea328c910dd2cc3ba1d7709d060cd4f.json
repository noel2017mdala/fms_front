{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/abel/fms_front/src/components/Dashboard/Modals/listTransactionModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { allActivities } from \"../../../redux/actions/actionCreator\";\nimport Cookies from \"universal-cookie\";\nimport Bin from \"../../../images/bin.png\";\nimport DeleteModal from \"./DeleteModal\";\nimport { Background, ModalWrapper, ModalCotent, CloseModal } from \"../../../styledComponents/Dashboard/Modals/listTransactionsModal\";\n\nconst ListTransactions = ({\n  state,\n  setState\n}) => {\n  _s();\n\n  const cookie = new Cookies();\n  let userInfo = cookie.get(\"user info\");\n  let userData = {\n    token: cookie.get(\"login\"),\n    id: userInfo[0].id\n  };\n  const dispatch = useDispatch();\n  const select = useSelector(e => {\n    return e;\n  });\n  const [modalState, showModal] = useState({\n    showDeleteModal: false,\n    id: \"\",\n    userData: userInfo[0].id\n  });\n  const override = `\n    display: block;\n    margin: 0 auto;\n    border-color: black;\n    margin-top: 10px;\n        `;\n  useEffect(() => {\n    dispatch(allActivities(userData));\n  }, [dispatch]);\n\n  const deleteActivity = data => {\n    showModal(prevstate => ({ ...prevstate,\n      showDeleteModal: !modalState.showDeleteModal,\n      id: data\n    }));\n  };\n\n  const getDate = e => {\n    let date = new Date(e);\n    return date.toDateString();\n  };\n\n  console.log(select);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: state.ListTransaction ? /*#__PURE__*/_jsxDEV(Background, {\n      children: /*#__PURE__*/_jsxDEV(ModalWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(ModalCotent, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"listContent\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"All Transactions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), !select.activity ? /*#__PURE__*/_jsxDEV(ClipLoader, {\n              css: override,\n              size: \"30px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this) : !select.activity.allActivities ? /*#__PURE__*/_jsxDEV(ClipLoader, {\n              css: override,\n              size: \"30px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this) : !select.activity.allActivities.transactions ? /*#__PURE__*/_jsxDEV(ClipLoader, {\n              css: override,\n              size: \"50px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this) : select.activity.allActivities.transactions.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"transactionlist\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [e.transaction_name, /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"ammount\",\n                    children: [\"K \", e.transaction_ammount]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: getDate(e.transaction_date)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: Bin,\n                    alt: \"Bin\",\n                    onClick: () => {\n                      // console.log(e.id);\n                      deleteActivity(e.id);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 23\n              }, this)\n            }, e.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), modalState.showDeleteModal ? /*#__PURE__*/_jsxDEV(DeleteModal, {\n            modalState: modalState,\n            showModal: showModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CloseModal, {\n          onClick: () => {\n            setState(prevstate => ({ ...prevstate,\n              ListTransaction: false\n            }));\n          },\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListTransactions, \"IWV27iygUOinIpNNnXW0ZMQkwzU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ListTransactions;\nexport default ListTransactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTransactions\");","map":{"version":3,"sources":["/home/abel/fms_front/src/components/Dashboard/Modals/listTransactionModal.js"],"names":["React","useEffect","useState","ClipLoader","useDispatch","useSelector","allActivities","Cookies","Bin","DeleteModal","Background","ModalWrapper","ModalCotent","CloseModal","ListTransactions","state","setState","cookie","userInfo","get","userData","token","id","dispatch","select","e","modalState","showModal","showDeleteModal","override","deleteActivity","data","prevstate","getDate","date","Date","toDateString","console","log","ListTransaction","activity","transactions","map","transaction_name","transaction_ammount","transaction_date"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { allActivities } from \"../../../redux/actions/actionCreator\";\nimport Cookies from \"universal-cookie\";\nimport Bin from \"../../../images/bin.png\";\nimport DeleteModal from \"./DeleteModal\";\nimport {\n  Background,\n  ModalWrapper,\n  ModalCotent,\n  CloseModal,\n} from \"../../../styledComponents/Dashboard/Modals/listTransactionsModal\";\nconst ListTransactions = ({ state, setState }) => {\n  const cookie = new Cookies();\n  let userInfo = cookie.get(\"user info\");\n  let userData = { token: cookie.get(\"login\"), id: userInfo[0].id };\n\n  const dispatch = useDispatch();\n  const select = useSelector((e) => {\n    return e;\n  });\n\n  const [modalState, showModal] = useState({\n    showDeleteModal: false,\n    id: \"\",\n    userData: userInfo[0].id,\n  });\n\n  const override = `\n    display: block;\n    margin: 0 auto;\n    border-color: black;\n    margin-top: 10px;\n        `;\n\n  useEffect(() => {\n    dispatch(allActivities(userData));\n  }, [dispatch]);\n\n  const deleteActivity = (data) => {\n    showModal((prevstate) => ({\n      ...prevstate,\n      showDeleteModal: !modalState.showDeleteModal,\n      id: data,\n    }));\n  };\n\n  const getDate = (e) => {\n    let date = new Date(e);\n    return date.toDateString();\n  };\n  console.log(select);\n  return (\n    <div>\n      {state.ListTransaction ? (\n        <Background>\n          <ModalWrapper>\n            <ModalCotent>\n              <div className=\"listContent\">\n                <h3>All Transactions</h3>\n                {!select.activity ? (\n                  <ClipLoader css={override} size=\"30px\" />\n                ) : !select.activity.allActivities ? (\n                  <ClipLoader css={override} size=\"30px\" />\n                ) : !select.activity.allActivities.transactions ? (\n                  <ClipLoader css={override} size=\"50px\" />\n                ) : (\n                  select.activity.allActivities.transactions.map((e) => (\n                    <div key={e.id} className=\"transactionlist\">\n                      <ul>\n                        <li>\n                          {e.transaction_name}\n                          <span className=\"ammount\">\n                            K {e.transaction_ammount}\n                          </span>\n                          <span>{getDate(e.transaction_date)}</span>\n                          <img\n                            src={Bin}\n                            alt=\"Bin\"\n                            onClick={() => {\n                              // console.log(e.id);\n                              deleteActivity(e.id);\n                            }}\n                          />\n                        </li>\n                      </ul>\n                    </div>\n                  ))\n                )}\n              </div>\n              {modalState.showDeleteModal ? (\n                <DeleteModal modalState={modalState} showModal={showModal} />\n              ) : null}\n            </ModalCotent>\n            <CloseModal\n              onClick={() => {\n                setState((prevstate) => ({\n                  ...prevstate,\n                  ListTransaction: false,\n                }));\n              }}\n            >\n              &times;\n            </CloseModal>\n          </ModalWrapper>\n        </Background>\n      ) : null}\n    </div>\n  );\n};\n\nexport default ListTransactions;\n"]},"metadata":{},"sourceType":"module"}