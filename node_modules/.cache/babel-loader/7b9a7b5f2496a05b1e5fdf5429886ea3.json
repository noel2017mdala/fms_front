{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/abel/fms_front/src/components/Dashboard/Modals/CeateTransactionModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSpring, animated } from \"react-spring\";\nimport { createTransaction } from \"../../../redux/actions/actionCreator\";\nimport toast from \"toasted-notes\";\nimport Cookies from \"universal-cookie\";\nimport { Background, ModalWrapper, ModalCotent, CloseModal } from \"../../../styledComponents/Dashboard/Modals/createTransactionModal\";\n\nconst CreateTransaction = ({\n  state,\n  setState\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const cookies = new Cookies();\n  const [userValue, getValue] = useState({\n    transaction_name: \"\",\n    transaction_ammount: \"\",\n    transaction_type: \"\"\n  });\n  const ref = useRef();\n  const animation = useSpring({\n    config: {\n      duration: 350\n    },\n    opacity: state.showModal ? 1 : 0,\n    transform: state.showModal ? `translateY(0%)` : `translateY(-100%)`\n  });\n\n  const handleSubmit = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    getValue(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  const validateinput = () => {\n    const {\n      transaction_name,\n      transaction_ammount,\n      transaction_type\n    } = userValue;\n\n    if (transaction_name === \"\" || transaction_ammount === \"\" || transaction_type === \"\") {\n      toast.notify(\"All values are required\");\n    } else if (transaction_name && transaction_ammount && transaction_type === \"\") {\n      toast.notify(\"values can never be empty \");\n    } else {\n      let data = { ...userValue,\n        transaction_by: cookies.get(\"user info\")[0].id\n      };\n      dispatch(createTransaction(data, cookies.get(\"login\"))); // setTimeout(toggleModal, 2000);\n    }\n  };\n\n  const toggleModal = () => {\n    setState(prevstate => ({ ...prevstate,\n      showModal: false\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: state.showModal ? /*#__PURE__*/_jsxDEV(Background, {\n      ref: ref,\n      onClick: () => {},\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        style: animation,\n        children: /*#__PURE__*/_jsxDEV(ModalWrapper, {\n          state: state,\n          children: [/*#__PURE__*/_jsxDEV(ModalCotent, {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"header\",\n              children: \"Create Transaction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"uservalue\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"transaction name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"transaction_name\",\n                  placeholder: \"transaction name\",\n                  onChange: handleSubmit\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"transaction amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  name: \"transaction_ammount\",\n                  placeholder: \"transaction amount\",\n                  onChange: handleSubmit\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Transaction type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"transaction_type\",\n                  onChange: handleSubmit,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"select\",\n                    children: \"Select\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"income\",\n                    children: \"Income\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"expenditure\",\n                    children: \"Expenditure\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"buttons\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"create\",\n                    onClick: e => {\n                      e.preventDefault();\n                      validateinput();\n                    },\n                    children: \"Create Transaction\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"cancel\",\n                    onClick: e => {\n                      e.preventDefault();\n                      toggleModal();\n                    },\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CloseModal, {\n            onClick: () => {\n              setState(prevstate => ({ ...prevstate,\n                showModal: false\n              }));\n            },\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateTransaction, \"5gTI9Gv55hIghMxOQbbJa4KegYI=\", false, function () {\n  return [useDispatch, useSpring];\n});\n\n_c = CreateTransaction;\nexport default CreateTransaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTransaction\");","map":{"version":3,"sources":["/home/abel/fms_front/src/components/Dashboard/Modals/CeateTransactionModal.js"],"names":["React","useRef","useState","useDispatch","useSpring","animated","createTransaction","toast","Cookies","Background","ModalWrapper","ModalCotent","CloseModal","CreateTransaction","state","setState","dispatch","cookies","userValue","getValue","transaction_name","transaction_ammount","transaction_type","ref","animation","config","duration","opacity","showModal","transform","handleSubmit","e","name","value","target","prevState","validateinput","notify","data","transaction_by","get","id","toggleModal","prevstate","preventDefault"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;AACA,SAASC,iBAAT,QAAkC,sCAAlC;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,SACEC,UADF,EAEEC,YAFF,EAGEC,WAHF,EAIEC,UAJF,QAKO,mEALP;;AAOA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AAAA;;AACjD,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,OAAO,GAAG,IAAIT,OAAJ,EAAhB;AACA,QAAM,CAACU,SAAD,EAAYC,QAAZ,IAAwBjB,QAAQ,CAAC;AACrCkB,IAAAA,gBAAgB,EAAE,EADmB;AAErCC,IAAAA,mBAAmB,EAAE,EAFgB;AAGrCC,IAAAA,gBAAgB,EAAE;AAHmB,GAAD,CAAtC;AAKA,QAAMC,GAAG,GAAGtB,MAAM,EAAlB;AACA,QAAMuB,SAAS,GAAGpB,SAAS,CAAC;AAC1BqB,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE;AADJ,KADkB;AAI1BC,IAAAA,OAAO,EAAEb,KAAK,CAACc,SAAN,GAAkB,CAAlB,GAAsB,CAJL;AAK1BC,IAAAA,SAAS,EAAEf,KAAK,CAACc,SAAN,GAAmB,gBAAnB,GAAsC;AALvB,GAAD,CAA3B;;AAQA,QAAME,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAf,IAAAA,QAAQ,CAAEgB,SAAD,KAAgB,EACvB,GAAGA,SADoB;AAEvB,OAACH,IAAD,GAAQC;AAFe,KAAhB,CAAD,CAAR;AAID,GAND;;AAQA,QAAMG,aAAa,GAAG,MAAM;AAC1B,UAAM;AACJhB,MAAAA,gBADI;AAEJC,MAAAA,mBAFI;AAGJC,MAAAA;AAHI,QAIFJ,SAJJ;;AAKA,QACEE,gBAAgB,KAAK,EAArB,IACAC,mBAAmB,KAAK,EADxB,IAEAC,gBAAgB,KAAK,EAHvB,EAIE;AACAf,MAAAA,KAAK,CAAC8B,MAAN,CAAa,yBAAb;AACD,KAND,MAMO,IACLjB,gBAAgB,IAChBC,mBADA,IAEAC,gBAAgB,KAAK,EAHhB,EAIL;AACAf,MAAAA,KAAK,CAAC8B,MAAN,CAAa,4BAAb;AACD,KANM,MAMA;AACL,UAAIC,IAAI,GAAG,EACT,GAAGpB,SADM;AAETqB,QAAAA,cAAc,EAAEtB,OAAO,CAACuB,GAAR,CAAY,WAAZ,EAAyB,CAAzB,EAA4BC;AAFnC,OAAX;AAKAzB,MAAAA,QAAQ,CAACV,iBAAiB,CAACgC,IAAD,EAAOrB,OAAO,CAACuB,GAAR,CAAY,OAAZ,CAAP,CAAlB,CAAR,CANK,CAOL;AACD;AACF,GA3BD;;AA4BA,QAAME,WAAW,GAAG,MAAM;AACxB3B,IAAAA,QAAQ,CAAE4B,SAAD,KAAgB,EACvB,GAAGA,SADoB;AAEvBf,MAAAA,SAAS,EAAE;AAFY,KAAhB,CAAD,CAAR;AAID,GALD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACGd,KAAK,CAACc,SAAN,gBACC,QAAC,UAAD;AAAY,MAAA,GAAG,EAAEL,GAAjB;AAAsB,MAAA,OAAO,EAAE,MAAM,CAAE,CAAvC;AAAA,6BACE,QAAC,QAAD,CAAU,GAAV;AAAc,QAAA,KAAK,EAAEC,SAArB;AAAA,+BACE,QAAC,YAAD;AAAc,UAAA,KAAK,EAAEV,KAArB;AAAA,kCACE,QAAC,WAAD;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,qCACE;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AACE,kBAAA,IAAI,EAAC,MADP;AAEE,kBAAA,IAAI,EAAC,kBAFP;AAGE,kBAAA,WAAW,EAAC,kBAHd;AAIE,kBAAA,QAAQ,EAAEgB;AAJZ;AAAA;AAAA;AAAA;AAAA,wBAFF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARF,eASE;AACE,kBAAA,IAAI,EAAC,QADP;AAEE,kBAAA,IAAI,EAAC,qBAFP;AAGE,kBAAA,WAAW,EAAC,oBAHd;AAIE,kBAAA,QAAQ,EAAEA;AAJZ;AAAA;AAAA;AAAA;AAAA,wBATF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAfF,eAgBE;AAAQ,kBAAA,IAAI,EAAC,kBAAb;AAAgC,kBAAA,QAAQ,EAAEA,YAA1C;AAAA,0CACE;AAAQ,oBAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAQ,oBAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,eAGE;AAAQ,oBAAA,KAAK,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAhBF,eAqBE;AAAK,kBAAA,SAAS,EAAC,SAAf;AAAA,0CACE;AACE,oBAAA,SAAS,EAAC,QADZ;AAEE,oBAAA,OAAO,EAAGC,CAAD,IAAO;AACdA,sBAAAA,CAAC,CAACa,cAAF;AACAR,sBAAAA,aAAa;AACd,qBALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAUE;AACE,oBAAA,SAAS,EAAC,QADZ;AAEE,oBAAA,OAAO,EAAGL,CAAD,IAAO;AACdA,sBAAAA,CAAC,CAACa,cAAF;AACAF,sBAAAA,WAAW;AACZ,qBALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAVF;AAAA;AAAA;AAAA;AAAA;AAAA,wBArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAgDE,QAAC,UAAD;AACE,YAAA,OAAO,EAAE,MAAM;AACb3B,cAAAA,QAAQ,CAAE4B,SAAD,KAAgB,EACvB,GAAGA,SADoB;AAEvBf,gBAAAA,SAAS,EAAE;AAFY,eAAhB,CAAD,CAAR;AAID,aANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,GAgEG;AAjEN;AAAA;AAAA;AAAA;AAAA,UADF;AAqED,CAhID;;GAAMf,iB;UACaV,W,EAQCC,S;;;KATdS,iB;AAkIN,eAAeA,iBAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSpring, animated } from \"react-spring\";\nimport { createTransaction } from \"../../../redux/actions/actionCreator\";\nimport toast from \"toasted-notes\";\nimport Cookies from \"universal-cookie\";\n\nimport {\n  Background,\n  ModalWrapper,\n  ModalCotent,\n  CloseModal,\n} from \"../../../styledComponents/Dashboard/Modals/createTransactionModal\";\n\nconst CreateTransaction = ({ state, setState }) => {\n  const dispatch = useDispatch();\n  const cookies = new Cookies();\n  const [userValue, getValue] = useState({\n    transaction_name: \"\",\n    transaction_ammount: \"\",\n    transaction_type: \"\",\n  });\n  const ref = useRef();\n  const animation = useSpring({\n    config: {\n      duration: 350,\n    },\n    opacity: state.showModal ? 1 : 0,\n    transform: state.showModal ? `translateY(0%)` : `translateY(-100%)`,\n  });\n\n  const handleSubmit = (e) => {\n    const { name, value } = e.target;\n    getValue((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const validateinput = () => {\n    const {\n      transaction_name,\n      transaction_ammount,\n      transaction_type,\n    } = userValue;\n    if (\n      transaction_name === \"\" ||\n      transaction_ammount === \"\" ||\n      transaction_type === \"\"\n    ) {\n      toast.notify(\"All values are required\");\n    } else if (\n      transaction_name &&\n      transaction_ammount &&\n      transaction_type === \"\"\n    ) {\n      toast.notify(\"values can never be empty \");\n    } else {\n      let data = {\n        ...userValue,\n        transaction_by: cookies.get(\"user info\")[0].id,\n      };\n\n      dispatch(createTransaction(data, cookies.get(\"login\")));\n      // setTimeout(toggleModal, 2000);\n    }\n  };\n  const toggleModal = () => {\n    setState((prevstate) => ({\n      ...prevstate,\n      showModal: false,\n    }));\n  };\n  return (\n    <div className=\"container\">\n      {state.showModal ? (\n        <Background ref={ref} onClick={() => {}}>\n          <animated.div style={animation}>\n            <ModalWrapper state={state}>\n              <ModalCotent>\n                <h1 className=\"header\">Create Transaction</h1>\n                <div className=\"uservalue\">\n                  <form>\n                    <label>transaction name</label>\n                    <input\n                      type=\"text\"\n                      name=\"transaction_name\"\n                      placeholder=\"transaction name\"\n                      onChange={handleSubmit}\n                    />\n                    <label>transaction amount</label>\n                    <input\n                      type=\"number\"\n                      name=\"transaction_ammount\"\n                      placeholder=\"transaction amount\"\n                      onChange={handleSubmit}\n                    />\n                    <label>Transaction type</label>\n                    <select name=\"transaction_type\" onChange={handleSubmit}>\n                      <option value=\"select\">Select</option>\n                      <option value=\"income\">Income</option>\n                      <option value=\"expenditure\">Expenditure</option>\n                    </select>\n                    <div className=\"buttons\">\n                      <button\n                        className=\"create\"\n                        onClick={(e) => {\n                          e.preventDefault();\n                          validateinput();\n                        }}\n                      >\n                        Create Transaction\n                      </button>\n                      <button\n                        className=\"cancel\"\n                        onClick={(e) => {\n                          e.preventDefault();\n                          toggleModal();\n                        }}\n                      >\n                        Cancel\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </ModalCotent>\n              <CloseModal\n                onClick={() => {\n                  setState((prevstate) => ({\n                    ...prevstate,\n                    showModal: false,\n                  }));\n                }}\n              >\n                &times;\n              </CloseModal>\n            </ModalWrapper>\n          </animated.div>\n        </Background>\n      ) : null}\n    </div>\n  );\n};\n\nexport default CreateTransaction;\n"]},"metadata":{},"sourceType":"module"}