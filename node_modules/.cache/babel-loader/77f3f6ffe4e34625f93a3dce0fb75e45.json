{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/abel/fms_front/src/components/Dashboard/balanceStats.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Cookies from \"universal-cookie\";\nimport { getBalance, getAmount } from \"../../redux/actions/dashboard/balanceStat\";\nimport { Line } from \"react-chartjs-2\";\nimport { BalanceStats as Statistics } from \"../../styledComponents/Dashboard/BalanceStats\";\n\nconst BalanceStats = () => {\n  _s();\n\n  const select = useSelector(e => {\n    return e;\n  });\n  const dispatch = useDispatch();\n  const cookies = new Cookies();\n  let getUserInfo = cookies.get(\"user_info\")[0];\n  let getToken = cookies.get(\"auth_token\");\n  useEffect(() => {\n    dispatch(getBalance(getUserInfo, getToken));\n    dispatch(getAmount(getUserInfo, getToken));\n  }, [dispatch]);\n  let days = [];\n  let prevAmount = []; // console.log(select.getTransaction.amount_transaction);\n  // if (select.getTransaction.amount_transaction) {\n  //   select.getTransaction.amount_transaction.map((e) => {\n  //     console.log(e);\n  //   });\n  // }\n\n  return /*#__PURE__*/_jsxDEV(Statistics, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: select.userBalance.map(e => {\n        return `Current Balance K ${e.Amount}`;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), !select.getTransaction.amount_transaction ? \"\" : select.getTransaction.amount_transaction.map(e => {\n      prevAmount.push(e.prev_Amount);\n      days.push(e.date_value);\n    }), /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        labels: [...days],\n        datasets: [{\n          label: \"Transaction\",\n          data: [...prevAmount],\n          backgroundColor: [\"rgba(102, 163, 255, 0.6)\"],\n          borderWidth: 1\n        }]\n      },\n      height: 100,\n      width: 200,\n      options: {\n        maintainAspectRatio: false,\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BalanceStats, \"zhyp/L3S3Fdp5da3Lh7W6T9O2to=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = BalanceStats;\nexport default BalanceStats;\n\nvar _c;\n\n$RefreshReg$(_c, \"BalanceStats\");","map":{"version":3,"sources":["/home/abel/fms_front/src/components/Dashboard/balanceStats.js"],"names":["React","useEffect","useDispatch","useSelector","Cookies","getBalance","getAmount","Line","BalanceStats","Statistics","select","e","dispatch","cookies","getUserInfo","get","getToken","days","prevAmount","userBalance","map","Amount","getTransaction","amount_transaction","push","prev_Amount","date_value","labels","datasets","label","data","backgroundColor","borderWidth","maintainAspectRatio","scales","yAxes","ticks","beginAtZero"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SACEC,UADF,EAEEC,SAFF,QAGO,2CAHP;AAIA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,YAAY,IAAIC,UAAzB,QAA2C,+CAA3C;;AAEA,MAAMD,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAME,MAAM,GAAGP,WAAW,CAAEQ,CAAD,IAAO;AAChC,WAAOA,CAAP;AACD,GAFyB,CAA1B;AAIA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AAEA,QAAMW,OAAO,GAAG,IAAIT,OAAJ,EAAhB;AACA,MAAIU,WAAW,GAAGD,OAAO,CAACE,GAAR,CAAY,WAAZ,EAAyB,CAAzB,CAAlB;AACA,MAAIC,QAAQ,GAAGH,OAAO,CAACE,GAAR,CAAY,YAAZ,CAAf;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAACP,UAAU,CAACS,WAAD,EAAcE,QAAd,CAAX,CAAR;AACAJ,IAAAA,QAAQ,CAACN,SAAS,CAACQ,WAAD,EAAcE,QAAd,CAAV,CAAR;AACD,GAHQ,EAGN,CAACJ,QAAD,CAHM,CAAT;AAKA,MAAIK,IAAI,GAAG,EAAX;AACA,MAAIC,UAAU,GAAG,EAAjB,CAjByB,CAkBzB;AACA;AACA;AACA;AACA;AACA;;AACA,sBACE,QAAC,UAAD;AAAA,4BACE;AAAA,gBACGR,MAAM,CAACS,WAAP,CAAmBC,GAAnB,CAAwBT,CAAD,IAAO;AAC7B,eAAQ,qBAAoBA,CAAC,CAACU,MAAO,EAArC;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA,YADF,EAiCG,CAACX,MAAM,CAACY,cAAP,CAAsBC,kBAAvB,GACG,EADH,GAEGb,MAAM,CAACY,cAAP,CAAsBC,kBAAtB,CAAyCH,GAAzC,CAA8CT,CAAD,IAAO;AAClDO,MAAAA,UAAU,CAACM,IAAX,CAAgBb,CAAC,CAACc,WAAlB;AACAR,MAAAA,IAAI,CAACO,IAAL,CAAUb,CAAC,CAACe,UAAZ;AACD,KAHD,CAnCN,eAuCE,QAAC,IAAD;AACE,MAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAE,CAAC,GAAGV,IAAJ,CADJ;AAEJW,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,aADT;AAEEC,UAAAA,IAAI,EAAE,CAAC,GAAGZ,UAAJ,CAFR;AAGEa,UAAAA,eAAe,EAAE,CAAC,0BAAD,CAHnB;AAIEC,UAAAA,WAAW,EAAE;AAJf,SADQ;AAFN,OADR;AAYE,MAAA,MAAM,EAAE,GAZV;AAaE,MAAA,KAAK,EAAE,GAbT;AAcE,MAAA,OAAO,EAAE;AACPC,QAAAA,mBAAmB,EAAE,KADd;AAEPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,CACL;AACEC,YAAAA,KAAK,EAAE;AACLC,cAAAA,WAAW,EAAE;AADR;AADT,WADK;AADD;AAFD;AAdX;AAAA;AAAA;AAAA;AAAA,YAvCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqED,CA7FD;;GAAM7B,Y;UACWL,W,EAIED,W;;;KALbM,Y;AA8FN,eAAeA,YAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Cookies from \"universal-cookie\";\nimport {\n  getBalance,\n  getAmount,\n} from \"../../redux/actions/dashboard/balanceStat\";\nimport { Line } from \"react-chartjs-2\";\nimport { BalanceStats as Statistics } from \"../../styledComponents/Dashboard/BalanceStats\";\n\nconst BalanceStats = () => {\n  const select = useSelector((e) => {\n    return e;\n  });\n\n  const dispatch = useDispatch();\n\n  const cookies = new Cookies();\n  let getUserInfo = cookies.get(\"user_info\")[0];\n  let getToken = cookies.get(\"auth_token\");\n\n  useEffect(() => {\n    dispatch(getBalance(getUserInfo, getToken));\n    dispatch(getAmount(getUserInfo, getToken));\n  }, [dispatch]);\n\n  let days = [];\n  let prevAmount = [];\n  // console.log(select.getTransaction.amount_transaction);\n  // if (select.getTransaction.amount_transaction) {\n  //   select.getTransaction.amount_transaction.map((e) => {\n  //     console.log(e);\n  //   });\n  // }\n  return (\n    <Statistics>\n      <p>\n        {select.userBalance.map((e) => {\n          return `Current Balance K ${e.Amount}`;\n        })}\n      </p>\n      {/* <Line\n        data={{\n          labels: [...days],\n          datasets: [\n            {\n              label: \"Transaction\",\n              data: [...prevAmount],\n              backgroundColor: [\"rgba(102, 163, 255, 0.6)\"],\n              borderWidth: 1,\n            },\n          ],\n        }}\n        height={100}\n        width={200}\n        options={{\n          maintainAspectRatio: false,\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  beginAtZero: true,\n                },\n              },\n            ],\n          },\n        }}\n      /> */}\n      {!select.getTransaction.amount_transaction\n        ? \"\"\n        : select.getTransaction.amount_transaction.map((e) => {\n            prevAmount.push(e.prev_Amount);\n            days.push(e.date_value);\n          })}\n      <Line\n        data={{\n          labels: [...days],\n          datasets: [\n            {\n              label: \"Transaction\",\n              data: [...prevAmount],\n              backgroundColor: [\"rgba(102, 163, 255, 0.6)\"],\n              borderWidth: 1,\n            },\n          ],\n        }}\n        height={100}\n        width={200}\n        options={{\n          maintainAspectRatio: false,\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  beginAtZero: true,\n                },\n              },\n            ],\n          },\n        }}\n      />\n    </Statistics>\n  );\n};\nexport default BalanceStats;\n"]},"metadata":{},"sourceType":"module"}