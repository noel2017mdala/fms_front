{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/abel/fms_front/src/components/Dashboard/balanceStats.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Cookies from \"universal-cookie\";\nimport { getBalance, getAmount } from \"../../redux/actions/dashboard/balanceStat\";\nimport { Line } from \"react-chartjs-2\";\nimport { BalanceStats as Statistics } from \"../../styledComponents/Dashboard/BalanceStats\";\n\nconst BalanceStats = () => {\n  _s();\n\n  const select = useSelector(e => {\n    return e;\n  });\n  const dispatch = useDispatch();\n  const cookies = new Cookies();\n  let getUserInfo = cookies.get(\"user_info\")[0];\n  let getToken = cookies.get(\"auth_token\");\n  useEffect(() => {\n    dispatch(getBalance(getUserInfo, getToken));\n    dispatch(getAmount(getUserInfo, getToken));\n  }, [dispatch]);\n  let days = [];\n  let prevAmount = [];\n  return /*#__PURE__*/_jsxDEV(Statistics, {\n    children: [!select.getTransaction.amount_transaction ? \"\" : select.getTransaction.amount_transaction.map(e => {\n      // console.log(\"rerendered\");\n      prevAmount.push(e.prev_Amount);\n      days.push(e.date_value);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chartContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: select.userBalance.map(e => {\n          return `Current Balance K ${e.Amount.toLocaleString()}`;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: [...days],\n          datasets: [{\n            label: \"Transaction\",\n            data: [...prevAmount],\n            backgroundColor: [\"rgba(102, 163, 255, 0.6)\"],\n            borderWidth: 1\n          }]\n        },\n        height: 100,\n        width: 200,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            xAxes: [{\n              gridLines: {\n                color: \"rgba(0, 0, 0, 0)\"\n              }\n            }],\n            yAxes: [{\n              gridLines: {\n                color: \"rgba(0, 0, 0, 0)\"\n              }\n            }]\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BalanceStats, \"zhyp/L3S3Fdp5da3Lh7W6T9O2to=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = BalanceStats;\nexport default BalanceStats;\n\nvar _c;\n\n$RefreshReg$(_c, \"BalanceStats\");","map":{"version":3,"sources":["/home/abel/fms_front/src/components/Dashboard/balanceStats.js"],"names":["React","useEffect","useDispatch","useSelector","Cookies","getBalance","getAmount","Line","BalanceStats","Statistics","select","e","dispatch","cookies","getUserInfo","get","getToken","days","prevAmount","getTransaction","amount_transaction","map","push","prev_Amount","date_value","userBalance","Amount","toLocaleString","labels","datasets","label","data","backgroundColor","borderWidth","responsive","maintainAspectRatio","scales","xAxes","gridLines","color","yAxes"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SACEC,UADF,EAEEC,SAFF,QAGO,2CAHP;AAIA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,YAAY,IAAIC,UAAzB,QAA2C,+CAA3C;;AAEA,MAAMD,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAME,MAAM,GAAGP,WAAW,CAAEQ,CAAD,IAAO;AAChC,WAAOA,CAAP;AACD,GAFyB,CAA1B;AAIA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AAEA,QAAMW,OAAO,GAAG,IAAIT,OAAJ,EAAhB;AACA,MAAIU,WAAW,GAAGD,OAAO,CAACE,GAAR,CAAY,WAAZ,EAAyB,CAAzB,CAAlB;AACA,MAAIC,QAAQ,GAAGH,OAAO,CAACE,GAAR,CAAY,YAAZ,CAAf;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAACP,UAAU,CAACS,WAAD,EAAcE,QAAd,CAAX,CAAR;AACAJ,IAAAA,QAAQ,CAACN,SAAS,CAACQ,WAAD,EAAcE,QAAd,CAAV,CAAR;AACD,GAHQ,EAGN,CAACJ,QAAD,CAHM,CAAT;AAKA,MAAIK,IAAI,GAAG,EAAX;AACA,MAAIC,UAAU,GAAG,EAAjB;AACA,sBACE,QAAC,UAAD;AAAA,eACG,CAACR,MAAM,CAACS,cAAP,CAAsBC,kBAAvB,GACG,EADH,GAEGV,MAAM,CAACS,cAAP,CAAsBC,kBAAtB,CAAyCC,GAAzC,CAA8CV,CAAD,IAAO;AAClD;AACAO,MAAAA,UAAU,CAACI,IAAX,CAAgBX,CAAC,CAACY,WAAlB;AACAN,MAAAA,IAAI,CAACK,IAAL,CAAUX,CAAC,CAACa,UAAZ;AACD,KAJD,CAHN,eAQE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAA,kBACGd,MAAM,CAACe,WAAP,CAAmBJ,GAAnB,CAAwBV,CAAD,IAAO;AAC7B,iBAAQ,qBAAoBA,CAAC,CAACe,MAAF,CAASC,cAAT,EAA0B,EAAtD;AACD,SAFA;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,IAAD;AACE,QAAA,IAAI,EAAE;AACJC,UAAAA,MAAM,EAAE,CAAC,GAAGX,IAAJ,CADJ;AAEJY,UAAAA,QAAQ,EAAE,CACR;AACEC,YAAAA,KAAK,EAAE,aADT;AAEEC,YAAAA,IAAI,EAAE,CAAC,GAAGb,UAAJ,CAFR;AAGEc,YAAAA,eAAe,EAAE,CAAC,0BAAD,CAHnB;AAIEC,YAAAA,WAAW,EAAE;AAJf,WADQ;AAFN,SADR;AAYE,QAAA,MAAM,EAAE,GAZV;AAaE,QAAA,KAAK,EAAE,GAbT;AAcE,QAAA,OAAO,EAAE;AACPC,UAAAA,UAAU,EAAE,IADL;AAEPC,UAAAA,mBAAmB,EAAE,KAFd;AAGPC,UAAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAE,CACL;AACEC,cAAAA,SAAS,EAAE;AACTC,gBAAAA,KAAK,EAAE;AADE;AADb,aADK,CADD;AAQNC,YAAAA,KAAK,EAAE,CACL;AACEF,cAAAA,SAAS,EAAE;AACTC,gBAAAA,KAAK,EAAE;AADE;AADb,aADK;AARD;AAHD;AAdX;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8DD,CAhFD;;GAAM/B,Y;UACWL,W,EAIED,W;;;KALbM,Y;AAiFN,eAAeA,YAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Cookies from \"universal-cookie\";\nimport {\n  getBalance,\n  getAmount,\n} from \"../../redux/actions/dashboard/balanceStat\";\nimport { Line } from \"react-chartjs-2\";\nimport { BalanceStats as Statistics } from \"../../styledComponents/Dashboard/BalanceStats\";\n\nconst BalanceStats = () => {\n  const select = useSelector((e) => {\n    return e;\n  });\n\n  const dispatch = useDispatch();\n\n  const cookies = new Cookies();\n  let getUserInfo = cookies.get(\"user_info\")[0];\n  let getToken = cookies.get(\"auth_token\");\n\n  useEffect(() => {\n    dispatch(getBalance(getUserInfo, getToken));\n    dispatch(getAmount(getUserInfo, getToken));\n  }, [dispatch]);\n\n  let days = [];\n  let prevAmount = [];\n  return (\n    <Statistics>\n      {!select.getTransaction.amount_transaction\n        ? \"\"\n        : select.getTransaction.amount_transaction.map((e) => {\n            // console.log(\"rerendered\");\n            prevAmount.push(e.prev_Amount);\n            days.push(e.date_value);\n          })}\n      <div className=\"chartContainer\">\n        <p>\n          {select.userBalance.map((e) => {\n            return `Current Balance K ${e.Amount.toLocaleString()}`;\n          })}\n        </p>\n        <Line\n          data={{\n            labels: [...days],\n            datasets: [\n              {\n                label: \"Transaction\",\n                data: [...prevAmount],\n                backgroundColor: [\"rgba(102, 163, 255, 0.6)\"],\n                borderWidth: 1,\n              },\n            ],\n          }}\n          height={100}\n          width={200}\n          options={{\n            responsive: true,\n            maintainAspectRatio: false,\n            scales: {\n              xAxes: [\n                {\n                  gridLines: {\n                    color: \"rgba(0, 0, 0, 0)\",\n                  },\n                },\n              ],\n              yAxes: [\n                {\n                  gridLines: {\n                    color: \"rgba(0, 0, 0, 0)\",\n                  },\n                },\n              ],\n            },\n          }}\n        />\n      </div>\n\n      {/* <button\n        onClick={() => {\n          dispatch(getBalance(getUserInfo, getToken));\n          dispatch(getAmount(getUserInfo, getToken));\n        }}\n      >\n        Text\n      </button> */}\n    </Statistics>\n  );\n};\nexport default BalanceStats;\n"]},"metadata":{},"sourceType":"module"}