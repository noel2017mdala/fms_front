{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/abel/fms_front/src/components/Dashboard/Activities.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { activitiesAction, getEarnings as getEarningsData, getExpenses as Expences } from \"../../redux/actions/actionCreator\";\nimport icon from \"../../images/more-512.webp\";\nimport { Activities as Activity } from \"../../styledComponents/Dashboard/Activities\";\n\nconst Activities = props => {\n  _s();\n\n  const [state, setState] = useState({\n    active: false\n  });\n  const dispatch = useDispatch();\n  const select = useSelector(e => {\n    return e;\n  });\n  const override = `\n    display: block;\n    margin: 0 auto;\n    border-color: black;\n    margin-top: 160px;\n        `;\n  useEffect(() => {\n    dispatch(activitiesAction(props));\n  }, [dispatch, props]);\n\n  const getEarnings = () => {\n    dispatch(getEarningsData(props));\n  };\n\n  const getAllTransacrtions = () => {\n    dispatch(activitiesAction(props));\n  };\n\n  const getExpenses = () => {\n    dispatch(Expences(props));\n  };\n\n  const getDate = e => {\n    let date = new Date(e);\n    return date.toDateString();\n  };\n\n  const displayOption = () => {\n    setState(prevState => ({ ...prevState,\n      active: !state.active\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Activity, {\n    children: \"Hello Recent Activities\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Activities, \"ouvnJc6bsZ1CQmAVwvKZvXisWq0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Activities;\nexport default Activities;\n\nvar _c;\n\n$RefreshReg$(_c, \"Activities\");","map":{"version":3,"sources":["/home/abel/fms_front/src/components/Dashboard/Activities.js"],"names":["React","useState","useEffect","ClipLoader","useDispatch","useSelector","activitiesAction","getEarnings","getEarningsData","getExpenses","Expences","icon","Activities","Activity","props","state","setState","active","dispatch","select","e","override","getAllTransacrtions","getDate","date","Date","toDateString","displayOption","prevState"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,gBADF,EAEEC,WAAW,IAAIC,eAFjB,EAGEC,WAAW,IAAIC,QAHjB,QAIO,mCAJP;AAKA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,SAASC,UAAU,IAAIC,QAAvB,QAAuC,6CAAvC;;AACA,MAAMD,UAAU,GAAIE,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC;AAAEgB,IAAAA,MAAM,EAAE;AAAV,GAAD,CAAlC;AACA,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AAEA,QAAMe,MAAM,GAAGd,WAAW,CAAEe,CAAD,IAAO;AAChC,WAAOA,CAAP;AACD,GAFyB,CAA1B;AAIA,QAAMC,QAAQ,GAAI;AACpB;AACA;AACA;AACA;AACA,SALE;AAOAnB,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,QAAQ,CAACZ,gBAAgB,CAACQ,KAAD,CAAjB,CAAR;AACD,GAFQ,EAEN,CAACI,QAAD,EAAWJ,KAAX,CAFM,CAAT;;AAIA,QAAMP,WAAW,GAAG,MAAM;AACxBW,IAAAA,QAAQ,CAACV,eAAe,CAACM,KAAD,CAAhB,CAAR;AACD,GAFD;;AAIA,QAAMQ,mBAAmB,GAAG,MAAM;AAChCJ,IAAAA,QAAQ,CAACZ,gBAAgB,CAACQ,KAAD,CAAjB,CAAR;AACD,GAFD;;AAIA,QAAML,WAAW,GAAG,MAAM;AACxBS,IAAAA,QAAQ,CAACR,QAAQ,CAACI,KAAD,CAAT,CAAR;AACD,GAFD;;AAIA,QAAMS,OAAO,GAAIH,CAAD,IAAO;AACrB,QAAII,IAAI,GAAG,IAAIC,IAAJ,CAASL,CAAT,CAAX;AACA,WAAOI,IAAI,CAACE,YAAL,EAAP;AACD,GAHD;;AAKA,QAAMC,aAAa,GAAG,MAAM;AAC1BX,IAAAA,QAAQ,CAAEY,SAAD,KAAgB,EACvB,GAAGA,SADoB;AAEvBX,MAAAA,MAAM,EAAE,CAACF,KAAK,CAACE;AAFQ,KAAhB,CAAD,CAAR;AAID,GALD;;AAMA,sBAAO,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA3CD;;GAAML,U;UAEaR,W,EAEFC,W;;;KAJXO,U;AA6CN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  activitiesAction,\n  getEarnings as getEarningsData,\n  getExpenses as Expences,\n} from \"../../redux/actions/actionCreator\";\nimport icon from \"../../images/more-512.webp\";\nimport { Activities as Activity } from \"../../styledComponents/Dashboard/Activities\";\nconst Activities = (props) => {\n  const [state, setState] = useState({ active: false });\n  const dispatch = useDispatch();\n\n  const select = useSelector((e) => {\n    return e;\n  });\n\n  const override = `\n    display: block;\n    margin: 0 auto;\n    border-color: black;\n    margin-top: 160px;\n        `;\n\n  useEffect(() => {\n    dispatch(activitiesAction(props));\n  }, [dispatch, props]);\n\n  const getEarnings = () => {\n    dispatch(getEarningsData(props));\n  };\n\n  const getAllTransacrtions = () => {\n    dispatch(activitiesAction(props));\n  };\n\n  const getExpenses = () => {\n    dispatch(Expences(props));\n  };\n\n  const getDate = (e) => {\n    let date = new Date(e);\n    return date.toDateString();\n  };\n\n  const displayOption = () => {\n    setState((prevState) => ({\n      ...prevState,\n      active: !state.active,\n    }));\n  };\n  return <Activity>Hello Recent Activities</Activity>;\n};\n\nexport default Activities;\n"]},"metadata":{},"sourceType":"module"}