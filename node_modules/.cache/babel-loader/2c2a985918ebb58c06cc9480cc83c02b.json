{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/abel/fms_front/src/components/Dashboard/Modals/listTransactionModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { allActivities } from \"../../../redux/actions/actionCreator\";\nimport Cookies from \"universal-cookie\";\nimport Bin from \"../../../images/bin.png\";\nimport DeleteModal from \"./DeleteModal\";\nimport { Container } from \"../../../styledComponents/Dashboard/Modals/listTransactionsModal\";\nimport { deleteActivity as Delete } from \"../../../redux/actions/actionCreator\";\n\nconst ListTransactions = ({\n  state,\n  setState\n}) => {\n  _s();\n\n  const cookie = new Cookies();\n  let userInfo = cookie.get(\"user_info\");\n  const token = cookie.get(\"auth_token\");\n  let userData = {\n    token: token,\n    id: userInfo[0].id\n  };\n  const dispatch = useDispatch();\n  const select = useSelector(e => {\n    return e;\n  });\n  const [modalState, showModal] = useState({\n    showDeleteModal: false,\n    id: \"\",\n    userData: userData\n  });\n  useEffect(() => {\n    dispatch(allActivities(userData));\n  }, [dispatch]);\n\n  const deleteActivity = data => {\n    showModal(prevstate => ({ ...prevstate,\n      showDeleteModal: !modalState.showDeleteModal,\n      id: data\n    }));\n  };\n\n  const getDate = e => {\n    let date = new Date(e);\n    return date.toDateString();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalWrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modalItems\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"header\",\n            children: \"All Transactions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"items\",\n            children: !select.activity ? /*#__PURE__*/_jsxDEV(ClipLoader, {\n              css: override,\n              size: \"30px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this) : !select.activity.allActivities ? /*#__PURE__*/_jsxDEV(ClipLoader, {\n              css: override,\n              size: \"30px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this) : select.activity.allActivities.transactions < 1 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"No activities found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this) : select.activity.allActivities.transactions.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"transactionlist\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [e.transaction_name, /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"ammount\",\n                    children: [\"K \", e.transaction_ammount]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: getDate(e.transaction_date)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: Bin,\n                    alt: \"Bin\",\n                    onClick: () => {\n                      // console.log(e.id);\n                      deleteActivity(e.id);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this)\n            }, e.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListTransactions, \"16k69bQL+SGIqZ52n3kAc2sFDEE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ListTransactions;\nexport default ListTransactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTransactions\");","map":{"version":3,"sources":["/home/abel/fms_front/src/components/Dashboard/Modals/listTransactionModal.js"],"names":["React","useEffect","useState","ClipLoader","useDispatch","useSelector","allActivities","Cookies","Bin","DeleteModal","Container","deleteActivity","Delete","ListTransactions","state","setState","cookie","userInfo","get","token","userData","id","dispatch","select","e","modalState","showModal","showDeleteModal","data","prevstate","getDate","date","Date","toDateString","activity","override","transactions","map","transaction_name","transaction_ammount","transaction_date"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { allActivities } from \"../../../redux/actions/actionCreator\";\nimport Cookies from \"universal-cookie\";\nimport Bin from \"../../../images/bin.png\";\nimport DeleteModal from \"./DeleteModal\";\nimport { Container } from \"../../../styledComponents/Dashboard/Modals/listTransactionsModal\";\nimport { deleteActivity as Delete } from \"../../../redux/actions/actionCreator\";\nconst ListTransactions = ({ state, setState }) => {\n  const cookie = new Cookies();\n  let userInfo = cookie.get(\"user_info\");\n  const token = cookie.get(\"auth_token\");\n  let userData = { token: token, id: userInfo[0].id };\n\n  const dispatch = useDispatch();\n  const select = useSelector((e) => {\n    return e;\n  });\n\n  const [modalState, showModal] = useState({\n    showDeleteModal: false,\n    id: \"\",\n    userData: userData,\n  });\n\n  useEffect(() => {\n    dispatch(allActivities(userData));\n  }, [dispatch]);\n\n  const deleteActivity = (data) => {\n    showModal((prevstate) => ({\n      ...prevstate,\n      showDeleteModal: !modalState.showDeleteModal,\n      id: data,\n    }));\n  };\n\n  const getDate = (e) => {\n    let date = new Date(e);\n    return date.toDateString();\n  };\n\n  return (\n    <div>\n      <Container>\n        <div className=\"modalWrapper\">\n          <div className=\"modalItems\">\n            <h3 className=\"header\">All Transactions</h3>\n            <div className=\"items\">\n              {!select.activity ? (\n                <ClipLoader css={override} size=\"30px\" />\n              ) : !select.activity.allActivities ? (\n                <ClipLoader css={override} size=\"30px\" />\n              ) : select.activity.allActivities.transactions < 1 ? (\n                <h3>No activities found</h3>\n              ) : (\n                select.activity.allActivities.transactions.map((e) => (\n                  <div key={e.id} className=\"transactionlist\">\n                    <ul>\n                      <li>\n                        {e.transaction_name}\n                        <span className=\"ammount\">\n                          K {e.transaction_ammount}\n                        </span>\n                        <span>{getDate(e.transaction_date)}</span>\n                        <img\n                          src={Bin}\n                          alt=\"Bin\"\n                          onClick={() => {\n                            // console.log(e.id);\n                            deleteActivity(e.id);\n                          }}\n                        />\n                      </li>\n                    </ul>\n                  </div>\n                ))\n              )}\n            </div>\n          </div>\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default ListTransactions;\n"]},"metadata":{},"sourceType":"module"}