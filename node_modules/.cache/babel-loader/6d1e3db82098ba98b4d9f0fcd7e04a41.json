{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/abel/fms_front/src/components/Dashboard/Modals/listTransactionModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { allActivities } from \"../../../redux/actions/dashboard/activities\";\nimport Cookies from \"universal-cookie\";\nimport Bin from \"../../../images/bin.png\";\nimport DeleteModal from \"./DeleteModal\";\nimport { Container } from \"../../../styledComponents/Dashboard/Modals/listTransactionsModal\";\nimport { deleteActivity as Delete } from \"../../../redux/actions/dashboard/activities\";\nimport common from \"../../../classes/componentClass\";\n\nconst ListTransactions = ({\n  state,\n  setState\n}) => {\n  _s();\n\n  const cookie = new Cookies();\n  let userInfo = cookie.get(\"user_info\");\n  const token = cookie.get(\"auth_token\");\n  let userData = {\n    token: token,\n    id: userInfo[0].id\n  };\n  const dispatch = useDispatch(); //Redux state selector\n\n  const select = useSelector(e => {\n    return e;\n  });\n  const [modalState, showModal] = useState({\n    showDeleteModal: false,\n    id: \"\",\n    userData: userData\n  });\n  useEffect(() => {\n    dispatch(allActivities(userData));\n  }, [dispatch]);\n\n  const deleteActivity = data => {\n    console.log({ ...modalState,\n      id: data\n    });\n  };\n\n  const getDate = e => {\n    let date = new Date(e);\n    return date.toDateString();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalWrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modalItems\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header_container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"header\",\n              children: \"All Transactions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"closeModal\",\n              onClick: e => {\n                e.preventDefault();\n                setState(prevState => ({ ...prevState,\n                  showModal: false,\n                  ListTransaction: false\n                }));\n              },\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"items\",\n            children: !select.ListActivities ? /*#__PURE__*/_jsxDEV(ClipLoader, {\n              css: common.loader(\"black\"),\n              size: \"30px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this) : !select.ListActivities.transactions ? /*#__PURE__*/_jsxDEV(ClipLoader, {\n              css: common.loader(\"black\"),\n              size: \"30px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this) : select.ListActivities.transactions.length < 1 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"No activities found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this) : select.ListActivities.transactions.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"transaction_list\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [e.transaction_name, /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"amount\",\n                    children: [\"K \", e.transaction_ammount]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"listTransactionModal_btn\",\n                    src: Bin,\n                    alt: \"Bin\",\n                    onClick: () => {\n                      // console.log(e.id);\n                      deleteActivity(e.id, userData);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this)\n            }, e.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), modalState.showDeleteModal ? /*#__PURE__*/_jsxDEV(DeleteModal, {\n        params: modalState,\n        showModal: showModal,\n        action: Delete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListTransactions, \"16k69bQL+SGIqZ52n3kAc2sFDEE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ListTransactions;\nexport default ListTransactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTransactions\");","map":{"version":3,"sources":["/home/abel/fms_front/src/components/Dashboard/Modals/listTransactionModal.js"],"names":["React","useEffect","useState","ClipLoader","useDispatch","useSelector","allActivities","Cookies","Bin","DeleteModal","Container","deleteActivity","Delete","common","ListTransactions","state","setState","cookie","userInfo","get","token","userData","id","dispatch","select","e","modalState","showModal","showDeleteModal","data","console","log","getDate","date","Date","toDateString","preventDefault","prevState","ListTransaction","ListActivities","loader","transactions","length","map","transaction_name","transaction_ammount"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { allActivities } from \"../../../redux/actions/dashboard/activities\";\nimport Cookies from \"universal-cookie\";\nimport Bin from \"../../../images/bin.png\";\nimport DeleteModal from \"./DeleteModal\";\nimport { Container } from \"../../../styledComponents/Dashboard/Modals/listTransactionsModal\";\nimport { deleteActivity as Delete } from \"../../../redux/actions/dashboard/activities\";\nimport common from \"../../../classes/componentClass\";\nconst ListTransactions = ({ state, setState }) => {\n  const cookie = new Cookies();\n  let userInfo = cookie.get(\"user_info\");\n  const token = cookie.get(\"auth_token\");\n  let userData = { token: token, id: userInfo[0].id };\n\n  const dispatch = useDispatch();\n\n  //Redux state selector\n  const select = useSelector((e) => {\n    return e;\n  });\n\n  const [modalState, showModal] = useState({\n    showDeleteModal: false,\n    id: \"\",\n    userData: userData,\n  });\n\n  useEffect(() => {\n    dispatch(allActivities(userData));\n  }, [dispatch]);\n\n  const deleteActivity = (data) => {\n    console.log({\n      ...modalState,\n      id: data,\n    });\n  };\n\n  const getDate = (e) => {\n    let date = new Date(e);\n    return date.toDateString();\n  };\n\n  return (\n    <div>\n      <Container>\n        <div className=\"modalWrapper\">\n          <div className=\"modalItems\">\n            <div className=\"header_container\">\n              <h3 className=\"header\">All Transactions</h3>\n              <div\n                className=\"closeModal\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  setState((prevState) => ({\n                    ...prevState,\n                    showModal: false,\n                    ListTransaction: false,\n                  }));\n                }}\n              >\n                &times;\n              </div>\n            </div>\n\n            <div className=\"items\">\n              {!select.ListActivities ? (\n                <ClipLoader css={common.loader(\"black\")} size=\"30px\" />\n              ) : !select.ListActivities.transactions ? (\n                <ClipLoader css={common.loader(\"black\")} size=\"30px\" />\n              ) : select.ListActivities.transactions.length < 1 ? (\n                <h3>No activities found</h3>\n              ) : (\n                select.ListActivities.transactions.map((e) => (\n                  <div key={e.id} className=\"transaction_list\">\n                    <ul>\n                      <li>\n                        {e.transaction_name}\n                        <span className=\"amount\">\n                          K {e.transaction_ammount}\n                        </span>\n                        {/* <span>{getDate(e.transaction_date)}</span> */}\n                        <img\n                          className=\"listTransactionModal_btn\"\n                          src={Bin}\n                          alt=\"Bin\"\n                          onClick={() => {\n                            // console.log(e.id);\n                            deleteActivity(e.id, userData);\n                          }}\n                        />\n                      </li>\n                    </ul>\n                  </div>\n                ))\n              )}\n            </div>\n          </div>\n        </div>\n        {modalState.showDeleteModal ? (\n          <DeleteModal\n            params={modalState}\n            showModal={showModal}\n            action={Delete}\n          />\n        ) : null}\n      </Container>\n    </div>\n  );\n};\n\nexport default ListTransactions;\n"]},"metadata":{},"sourceType":"module"}