{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/abel/fms_front/src/components/Dashboard/Activities.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { activitiesAction, getEarnings as getEarningsData, getExpenses as Expences } from \"../../redux/actions/actionCreator\";\nimport icon from \"../../images/more-512.webp\";\nimport Cookies from \"universal-cookie\";\nimport { Activities as Activity } from \"../../styledComponents/Dashboard/Activities\";\nimport Options from \"./options/TransactionOptions\";\n\nconst Activities = props => {\n  _s();\n\n  const [state, setState] = useState({\n    active: false\n  });\n  const dispatch = useDispatch();\n  const select = useSelector(e => {\n    return e;\n  });\n  const override = `\n    display: block;\n    margin: 0 auto;\n    border-color: black;\n    margin-top: 10px;\n        `;\n  useEffect(() => {\n    dispatch(activitiesAction(props));\n  }, [dispatch, props]);\n\n  const getEarnings = () => {\n    dispatch(getEarningsData(props));\n  };\n\n  const getAllTransacrtions = () => {\n    dispatch(activitiesAction(props));\n  };\n\n  const getExpenses = () => {\n    dispatch(Expences(props));\n  };\n\n  const getDate = e => {\n    let date = new Date(e);\n    return date.toDateString();\n  };\n\n  const displayOption = () => {\n    setState(prevState => ({ ...prevState,\n      active: !state.active\n    }));\n  };\n\n  const cookie = new Cookies();\n  console.log(cookie(\"user info\"));\n  return /*#__PURE__*/_jsxDEV(Activity, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: icon,\n          onClick: () => {\n            displayOption();\n          },\n          alt: \"options icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Recent Transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              getAllTransacrtions();\n            },\n            children: \"Transactions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              getEarnings();\n            },\n            children: \"Earnings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              getExpenses();\n            },\n            children: \"Expenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list\",\n          children: !select.activity.activities ? /*#__PURE__*/_jsxDEV(ClipLoader, {\n            css: override,\n            size: \"30px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this) : !select.activity.activities.transaction ? /*#__PURE__*/_jsxDEV(ClipLoader, {\n            css: override,\n            size: \"30px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this) : select.activity.activities.transaction.length < 1 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"info\",\n            children: \"You don't have any recent Transactions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this) : select.activity.activities.transaction.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: e.transaction_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"K \", e.transaction_ammount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: getDate(e.transaction_date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this)]\n          }, e.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), !state.active ? \"\" : /*#__PURE__*/_jsxDEV(Options, {\n        state: state,\n        setState: setState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Activities, \"ouvnJc6bsZ1CQmAVwvKZvXisWq0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Activities;\nexport default Activities;\n\nvar _c;\n\n$RefreshReg$(_c, \"Activities\");","map":{"version":3,"sources":["/home/abel/fms_front/src/components/Dashboard/Activities.js"],"names":["React","useState","useEffect","ClipLoader","useDispatch","useSelector","activitiesAction","getEarnings","getEarningsData","getExpenses","Expences","icon","Cookies","Activities","Activity","Options","props","state","setState","active","dispatch","select","e","override","getAllTransacrtions","getDate","date","Date","toDateString","displayOption","prevState","cookie","console","log","activity","activities","transaction","length","map","transaction_name","transaction_ammount","transaction_date","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  activitiesAction,\n  getEarnings as getEarningsData,\n  getExpenses as Expences,\n} from \"../../redux/actions/actionCreator\";\nimport icon from \"../../images/more-512.webp\";\nimport Cookies from \"universal-cookie\";\nimport { Activities as Activity } from \"../../styledComponents/Dashboard/Activities\";\nimport Options from \"./options/TransactionOptions\";\nconst Activities = (props) => {\n  const [state, setState] = useState({ active: false });\n  const dispatch = useDispatch();\n\n  const select = useSelector((e) => {\n    return e;\n  });\n\n  const override = `\n    display: block;\n    margin: 0 auto;\n    border-color: black;\n    margin-top: 10px;\n        `;\n\n  useEffect(() => {\n    dispatch(activitiesAction(props));\n  }, [dispatch, props]);\n\n  const getEarnings = () => {\n    dispatch(getEarningsData(props));\n  };\n\n  const getAllTransacrtions = () => {\n    dispatch(activitiesAction(props));\n  };\n\n  const getExpenses = () => {\n    dispatch(Expences(props));\n  };\n\n  const getDate = (e) => {\n    let date = new Date(e);\n    return date.toDateString();\n  };\n\n  const displayOption = () => {\n    setState((prevState) => ({\n      ...prevState,\n      active: !state.active,\n    }));\n  };\n  const cookie = new Cookies();\n  console.log(cookie(\"user info\"));\n  return (\n    <Activity>\n      <div className=\"container\">\n        <div className=\"content\">\n          <img\n            src={icon}\n            onClick={() => {\n              displayOption();\n            }}\n            alt=\"options icon\"\n          />\n          <h3>Recent Transactions</h3>\n\n          <ul>\n            <li\n              onClick={() => {\n                getAllTransacrtions();\n              }}\n            >\n              Transactions\n            </li>\n            <li\n              onClick={() => {\n                getEarnings();\n              }}\n            >\n              Earnings\n            </li>\n            <li\n              onClick={() => {\n                getExpenses();\n              }}\n            >\n              Expenses\n            </li>\n          </ul>\n          <div className=\"list\">\n            {!select.activity.activities ? (\n              <ClipLoader css={override} size=\"30px\" />\n            ) : !select.activity.activities.transaction ? (\n              <ClipLoader css={override} size=\"30px\" />\n            ) : select.activity.activities.transaction.length < 1 ? (\n              <h3 className=\"info\">You don't have any recent Transactions</h3>\n            ) : (\n              select.activity.activities.transaction.map((e) => (\n                <div key={e.id}>\n                  <p>{e.transaction_name}</p>\n                  <p>K {e.transaction_ammount}</p>\n                  <p>{getDate(e.transaction_date)}</p>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n        {!state.active ? \"\" : <Options state={state} setState={setState} />}\n      </div>\n    </Activity>\n  );\n};\n\nexport default Activities;\n"]},"metadata":{},"sourceType":"module"}