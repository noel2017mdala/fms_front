{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/abel/fms_front/src/components/Dashboard/Projects.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getProjects } from \"../../redux/actions/actionCreator\";\nimport { Projects as Project } from \"../../styledComponents/Dashboard/Projects\";\n\nconst Projects = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const select = useSelector(e => {\n    return e;\n  });\n\n  const getDate = e => {\n    let date = new Date(e);\n    return date.toDateString();\n  };\n\n  useEffect(() => {// dispatch(getProjects(props));\n  }, [dispatch, props]);\n  return /*#__PURE__*/_jsxDEV(Project, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projectContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Hello Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projectData\",\n        children: !select.projects.data ? /*#__PURE__*/_jsxDEV(ClipLoader, {\n          css: override,\n          size: \"40px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this) : !select.projects.data.projects ? /*#__PURE__*/_jsxDEV(ClipLoader, {\n          css: override,\n          size: \"40px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this) : select.projects.data.projects.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: projectStyle.projects_content,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: projectStyle.projects_p,\n              children: [e.projects_name, /*#__PURE__*/_jsxDEV(\"span\", {\n                style: projectStyle.project_span,\n                children: getDate(e.date_created)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this)\n        }, e.projects_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Projects, \"M0bnVij51e5Ju9/GUNPqa+eNaAM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/home/abel/fms_front/src/components/Dashboard/Projects.js"],"names":["React","useState","useEffect","useDispatch","useSelector","getProjects","Projects","Project","props","dispatch","select","e","getDate","date","Date","toDateString","projects","data","override","map","projectStyle","projects_content","projects_p","projects_name","project_span","date_created","projects_id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,mCAA5B;AACA,SAASC,QAAQ,IAAIC,OAArB,QAAoC,2CAApC;;AACA,MAAMD,QAAQ,GAAIE,KAAD,IAAW;AAAA;;AAC1B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,MAAM,GAAGN,WAAW,CAAEO,CAAD,IAAO;AAChC,WAAOA,CAAP;AACD,GAFyB,CAA1B;;AAIA,QAAMC,OAAO,GAAID,CAAD,IAAO;AACrB,QAAIE,IAAI,GAAG,IAAIC,IAAJ,CAASH,CAAT,CAAX;AACA,WAAOE,IAAI,CAACE,YAAL,EAAP;AACD,GAHD;;AAIAb,EAAAA,SAAS,CAAC,MAAM,CACd;AACD,GAFQ,EAEN,CAACO,QAAD,EAAWD,KAAX,CAFM,CAAT;AAGA,sBACE,QAAC,OAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,kBACG,CAACE,MAAM,CAACM,QAAP,CAAgBC,IAAjB,gBACC,QAAC,UAAD;AAAY,UAAA,GAAG,EAAEC,QAAjB;AAA2B,UAAA,IAAI,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADD,GAEG,CAACR,MAAM,CAACM,QAAP,CAAgBC,IAAhB,CAAqBD,QAAtB,gBACF,QAAC,UAAD;AAAY,UAAA,GAAG,EAAEE,QAAjB;AAA2B,UAAA,IAAI,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADE,GAGFR,MAAM,CAACM,QAAP,CAAgBC,IAAhB,CAAqBD,QAArB,CAA8BG,GAA9B,CAAmCR,CAAD,iBAChC;AAAA,iCACE;AAAK,YAAA,KAAK,EAAES,YAAY,CAACC,gBAAzB;AAAA,mCACE;AAAG,cAAA,KAAK,EAAED,YAAY,CAACE,UAAvB;AAAA,yBACGX,CAAC,CAACY,aADL,eAEE;AAAM,gBAAA,KAAK,EAAEH,YAAY,CAACI,YAA1B;AAAA,0BACGZ,OAAO,CAACD,CAAC,CAACc,YAAH;AADV;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,WAAUd,CAAC,CAACe,WAAZ;AAAA;AAAA;AAAA;AAAA,gBADF;AANJ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAxCD;;GAAMpB,Q;UACaH,W,EACFC,W;;;KAFXE,Q;AA0CN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getProjects } from \"../../redux/actions/actionCreator\";\nimport { Projects as Project } from \"../../styledComponents/Dashboard/Projects\";\nconst Projects = (props) => {\n  const dispatch = useDispatch();\n  const select = useSelector((e) => {\n    return e;\n  });\n\n  const getDate = (e) => {\n    let date = new Date(e);\n    return date.toDateString();\n  };\n  useEffect(() => {\n    // dispatch(getProjects(props));\n  }, [dispatch, props]);\n  return (\n    <Project>\n      <div className=\"projectContainer\">\n        <h3>Hello Projects</h3>\n        <div className=\"projectData\">\n          {!select.projects.data ? (\n            <ClipLoader css={override} size=\"40px\" />\n          ) : !select.projects.data.projects ? (\n            <ClipLoader css={override} size=\"40px\" />\n          ) : (\n            select.projects.data.projects.map((e) => (\n              <div key={e.projects_id}>\n                <div style={projectStyle.projects_content}>\n                  <p style={projectStyle.projects_p}>\n                    {e.projects_name}\n                    <span style={projectStyle.project_span}>\n                      {getDate(e.date_created)}\n                    </span>\n                  </p>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    </Project>\n  );\n};\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}