{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/abel/fms_front/src/components/Dashboard/balanceStats.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Cookies from \"universal-cookie\";\nimport { getBalance, getAmount } from \"../../redux/actions/dashboard/balanceStat\";\nimport { Line } from \"react-chartjs-2\";\nimport { BalanceStats as Statistics } from \"../../styledComponents/Dashboard/BalanceStats\";\n\nconst BalanceStats = () => {\n  _s();\n\n  const select = useSelector(e => {\n    return e;\n  });\n  const dispatch = useDispatch();\n  const cookies = new Cookies();\n  let getUserInfo = cookies.get(\"user_info\")[0];\n  let getToken = cookies.get(\"auth_token\");\n  useEffect(() => {\n    dispatch(getBalance(getUserInfo, getToken));\n    dispatch(getAmount(getUserInfo, getToken));\n  }, [dispatch]);\n  let days = [];\n  let prevAmount = []; // console.log(select.getTransaction.amount_transaction);\n\n  if (select.getTransaction.amount_transaction) {\n    select.getTransaction.amount_transaction.map(e => {\n      console.log(e);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Statistics, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: select.userBalance.map(e => {\n        return `Current Balance K ${e.Amount}`;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), !select.getTransaction.amount_transaction ? \"\" : select.getTransaction.amount_transaction.map(e => {\n      /*#__PURE__*/\n      _jsxDEV(Line, {\n        data: {\n          labels: [...e.date_value],\n          datasets: [{\n            label: \"Transaction\",\n            data: [...prev_Amount],\n            backgroundColor: [\"rgba(102, 163, 255, 0.6)\"],\n            borderWidth: 1\n          }]\n        },\n        height: 100,\n        width: 200,\n        options: {\n          maintainAspectRatio: false,\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true\n              }\n            }]\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BalanceStats, \"zhyp/L3S3Fdp5da3Lh7W6T9O2to=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = BalanceStats;\nexport default BalanceStats;\n\nvar _c;\n\n$RefreshReg$(_c, \"BalanceStats\");","map":{"version":3,"sources":["/home/abel/fms_front/src/components/Dashboard/balanceStats.js"],"names":["React","useEffect","useDispatch","useSelector","Cookies","getBalance","getAmount","Line","BalanceStats","Statistics","select","e","dispatch","cookies","getUserInfo","get","getToken","days","prevAmount","getTransaction","amount_transaction","map","console","log","userBalance","Amount","labels","date_value","datasets","label","data","prev_Amount","backgroundColor","borderWidth","maintainAspectRatio","scales","yAxes","ticks","beginAtZero"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SACEC,UADF,EAEEC,SAFF,QAGO,2CAHP;AAIA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,YAAY,IAAIC,UAAzB,QAA2C,+CAA3C;;AAEA,MAAMD,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAME,MAAM,GAAGP,WAAW,CAAEQ,CAAD,IAAO;AAChC,WAAOA,CAAP;AACD,GAFyB,CAA1B;AAIA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AAEA,QAAMW,OAAO,GAAG,IAAIT,OAAJ,EAAhB;AACA,MAAIU,WAAW,GAAGD,OAAO,CAACE,GAAR,CAAY,WAAZ,EAAyB,CAAzB,CAAlB;AACA,MAAIC,QAAQ,GAAGH,OAAO,CAACE,GAAR,CAAY,YAAZ,CAAf;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAACP,UAAU,CAACS,WAAD,EAAcE,QAAd,CAAX,CAAR;AACAJ,IAAAA,QAAQ,CAACN,SAAS,CAACQ,WAAD,EAAcE,QAAd,CAAV,CAAR;AACD,GAHQ,EAGN,CAACJ,QAAD,CAHM,CAAT;AAKA,MAAIK,IAAI,GAAG,EAAX;AACA,MAAIC,UAAU,GAAG,EAAjB,CAjByB,CAkBzB;;AACA,MAAIR,MAAM,CAACS,cAAP,CAAsBC,kBAA1B,EAA8C;AAC5CV,IAAAA,MAAM,CAACS,cAAP,CAAsBC,kBAAtB,CAAyCC,GAAzC,CAA8CV,CAAD,IAAO;AAClDW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,CAAZ;AACD,KAFD;AAGD;;AACD,sBACE,QAAC,UAAD;AAAA,4BACE;AAAA,gBACGD,MAAM,CAACc,WAAP,CAAmBH,GAAnB,CAAwBV,CAAD,IAAO;AAC7B,eAAQ,qBAAoBA,CAAC,CAACc,MAAO,EAArC;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA,YADF,EAiCG,CAACf,MAAM,CAACS,cAAP,CAAsBC,kBAAvB,GACG,EADH,GAEGV,MAAM,CAACS,cAAP,CAAsBC,kBAAtB,CAAyCC,GAAzC,CAA8CV,CAAD,IAAO;AAClD;AAAA,cAAC,IAAD;AACE,QAAA,IAAI,EAAE;AACJe,UAAAA,MAAM,EAAE,CAAC,GAAGf,CAAC,CAACgB,UAAN,CADJ;AAEJC,UAAAA,QAAQ,EAAE,CACR;AACEC,YAAAA,KAAK,EAAE,aADT;AAEEC,YAAAA,IAAI,EAAE,CAAC,GAAGC,WAAJ,CAFR;AAGEC,YAAAA,eAAe,EAAE,CAAC,0BAAD,CAHnB;AAIEC,YAAAA,WAAW,EAAE;AAJf,WADQ;AAFN,SADR;AAYE,QAAA,MAAM,EAAE,GAZV;AAaE,QAAA,KAAK,EAAE,GAbT;AAcE,QAAA,OAAO,EAAE;AACPC,UAAAA,mBAAmB,EAAE,KADd;AAEPC,UAAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAE,CACL;AACEC,cAAAA,KAAK,EAAE;AACLC,gBAAAA,WAAW,EAAE;AADR;AADT,aADK;AADD;AAFD;AAdX;AAAA;AAAA;AAAA;AAAA;AA2BD,KA5BD,CAnCN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmED,CA3FD;;GAAM9B,Y;UACWL,W,EAIED,W;;;KALbM,Y;AA4FN,eAAeA,YAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Cookies from \"universal-cookie\";\nimport {\n  getBalance,\n  getAmount,\n} from \"../../redux/actions/dashboard/balanceStat\";\nimport { Line } from \"react-chartjs-2\";\nimport { BalanceStats as Statistics } from \"../../styledComponents/Dashboard/BalanceStats\";\n\nconst BalanceStats = () => {\n  const select = useSelector((e) => {\n    return e;\n  });\n\n  const dispatch = useDispatch();\n\n  const cookies = new Cookies();\n  let getUserInfo = cookies.get(\"user_info\")[0];\n  let getToken = cookies.get(\"auth_token\");\n\n  useEffect(() => {\n    dispatch(getBalance(getUserInfo, getToken));\n    dispatch(getAmount(getUserInfo, getToken));\n  }, [dispatch]);\n\n  let days = [];\n  let prevAmount = [];\n  // console.log(select.getTransaction.amount_transaction);\n  if (select.getTransaction.amount_transaction) {\n    select.getTransaction.amount_transaction.map((e) => {\n      console.log(e);\n    });\n  }\n  return (\n    <Statistics>\n      <p>\n        {select.userBalance.map((e) => {\n          return `Current Balance K ${e.Amount}`;\n        })}\n      </p>\n      {/* <Line\n        data={{\n          labels: [...days],\n          datasets: [\n            {\n              label: \"Transaction\",\n              data: [...prevAmount],\n              backgroundColor: [\"rgba(102, 163, 255, 0.6)\"],\n              borderWidth: 1,\n            },\n          ],\n        }}\n        height={100}\n        width={200}\n        options={{\n          maintainAspectRatio: false,\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  beginAtZero: true,\n                },\n              },\n            ],\n          },\n        }}\n      /> */}\n      {!select.getTransaction.amount_transaction\n        ? \"\"\n        : select.getTransaction.amount_transaction.map((e) => {\n            <Line\n              data={{\n                labels: [...e.date_value],\n                datasets: [\n                  {\n                    label: \"Transaction\",\n                    data: [...prev_Amount],\n                    backgroundColor: [\"rgba(102, 163, 255, 0.6)\"],\n                    borderWidth: 1,\n                  },\n                ],\n              }}\n              height={100}\n              width={200}\n              options={{\n                maintainAspectRatio: false,\n                scales: {\n                  yAxes: [\n                    {\n                      ticks: {\n                        beginAtZero: true,\n                      },\n                    },\n                  ],\n                },\n              }}\n            />;\n          })}\n    </Statistics>\n  );\n};\nexport default BalanceStats;\n"]},"metadata":{},"sourceType":"module"}