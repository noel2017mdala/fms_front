{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/abel/fms_front/src/components/Projects.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getProjects } from \"../redux/actions/actionCreator\";\nimport projectStyle from \"../styles/ProjectsStyle\";\n\nconst Projects = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const select = useSelector(e => {\n    return e;\n  });\n\n  const getDate = e => {\n    let date = new Date(e);\n    return date.toDateString();\n  };\n\n  const override = `\n  display: block;\n  margin: 0 auto;\n  border-color: black;\n  margin-top: 160px;\n      `;\n  useEffect(() => {\n    dispatch(getProjects());\n  }, [dispatch]);\n  console.log(select.projects.data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: projectStyle.body,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: projectStyle.projects_h1,\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !select.projects.data ? /*#__PURE__*/_jsxDEV(ClipLoader, {\n        css: override,\n        size: \"40px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this) : !select.projects.data.projects ? /*#__PURE__*/_jsxDEV(ClipLoader, {\n        css: override,\n        size: \"40px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this) : select.projects.data.projects.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: projectStyle.projects_content,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: projectStyle.projects_p,\n            children: [e.projects_name, /*#__PURE__*/_jsxDEV(\"span\", {\n              style: projectStyle.project_span,\n              children: e.date_created\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)\n      }, e.projects_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Projects, \"M0bnVij51e5Ju9/GUNPqa+eNaAM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/home/abel/fms_front/src/components/Projects.js"],"names":["React","useState","useEffect","ClipLoader","useDispatch","useSelector","getProjects","projectStyle","Projects","dispatch","select","e","getDate","date","Date","toDateString","override","console","log","projects","data","body","projects_h1","map","projects_content","projects_p","projects_name","project_span","date_created","projects_id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,gCAA5B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,MAAM,GAAGL,WAAW,CAAEM,CAAD,IAAO;AAChC,WAAOA,CAAP;AACD,GAFyB,CAA1B;;AAIA,QAAMC,OAAO,GAAID,CAAD,IAAO;AACrB,QAAIE,IAAI,GAAG,IAAIC,IAAJ,CAASH,CAAT,CAAX;AACA,WAAOE,IAAI,CAACE,YAAL,EAAP;AACD,GAHD;;AAKA,QAAMC,QAAQ,GAAI;AACpB;AACA;AACA;AACA;AACA,OALE;AAOAd,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ,CAACH,WAAW,EAAZ,CAAR;AACD,GAFQ,EAEN,CAACG,QAAD,CAFM,CAAT;AAGAQ,EAAAA,OAAO,CAACC,GAAR,CAAYR,MAAM,CAACS,QAAP,CAAgBC,IAA5B;AACA,sBACE;AAAK,IAAA,KAAK,EAAEb,YAAY,CAACc,IAAzB;AAAA,4BACE;AAAI,MAAA,KAAK,EAAEd,YAAY,CAACe,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACG,CAACZ,MAAM,CAACS,QAAP,CAAgBC,IAAjB,gBACC,QAAC,UAAD;AAAY,QAAA,GAAG,EAAEJ,QAAjB;AAA2B,QAAA,IAAI,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,cADD,GAEG,CAACN,MAAM,CAACS,QAAP,CAAgBC,IAAhB,CAAqBD,QAAtB,gBACF,QAAC,UAAD;AAAY,QAAA,GAAG,EAAEH,QAAjB;AAA2B,QAAA,IAAI,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,cADE,GAGFN,MAAM,CAACS,QAAP,CAAgBC,IAAhB,CAAqBD,QAArB,CAA8BI,GAA9B,CAAmCZ,CAAD,iBAChC;AAAA,+BACE;AAAK,UAAA,KAAK,EAAEJ,YAAY,CAACiB,gBAAzB;AAAA,iCACE;AAAG,YAAA,KAAK,EAAEjB,YAAY,CAACkB,UAAvB;AAAA,uBACGd,CAAC,CAACe,aADL,eAEE;AAAM,cAAA,KAAK,EAAEnB,YAAY,CAACoB,YAA1B;AAAA,wBACGhB,CAAC,CAACiB;AADL;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,SAAUjB,CAAC,CAACkB,WAAZ;AAAA;AAAA;AAAA;AAAA,cADF;AANJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA/CD;;GAAMrB,Q;UACaJ,W,EACFC,W;;;KAFXG,Q;AAiDN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getProjects } from \"../redux/actions/actionCreator\";\nimport projectStyle from \"../styles/ProjectsStyle\";\n\nconst Projects = () => {\n  const dispatch = useDispatch();\n  const select = useSelector((e) => {\n    return e;\n  });\n\n  const getDate = (e) => {\n    let date = new Date(e);\n    return date.toDateString();\n  };\n\n  const override = `\n  display: block;\n  margin: 0 auto;\n  border-color: black;\n  margin-top: 160px;\n      `;\n\n  useEffect(() => {\n    dispatch(getProjects());\n  }, [dispatch]);\n  console.log(select.projects.data);\n  return (\n    <div style={projectStyle.body}>\n      <h1 style={projectStyle.projects_h1}>Projects</h1>\n      <div>\n        {!select.projects.data ? (\n          <ClipLoader css={override} size=\"40px\" />\n        ) : !select.projects.data.projects ? (\n          <ClipLoader css={override} size=\"40px\" />\n        ) : (\n          select.projects.data.projects.map((e) => (\n            <div key={e.projects_id}>\n              <div style={projectStyle.projects_content}>\n                <p style={projectStyle.projects_p}>\n                  {e.projects_name}\n                  <span style={projectStyle.project_span}>\n                    {e.date_created}\n                  </span>\n                </p>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}