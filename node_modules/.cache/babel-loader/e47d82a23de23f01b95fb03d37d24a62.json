{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/abel/fms_front/src/components/Dashboard/Modals/listTransactionModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { allActivities } from \"../../../redux/actions/actionCreator\";\nimport Cookies from \"universal-cookie\";\nimport Bin from \"../../../images/bin.png\";\nimport DeleteModal from \"./DeleteModal\";\nimport { Background, ModalWrapper, ModalCotent, CloseModal } from \"../../../styledComponents/Dashboard/Modals/listTransactionsModal\";\nimport { deleteActivity as Delete } from \"../../../redux/actions/actionCreator\";\n\nconst ListTransactions = ({\n  state,\n  setState\n}) => {\n  _s();\n\n  const cookie = new Cookies();\n  let userInfo = cookie.get(\"user info\");\n  const token = cookie.get(\"login\");\n  let userData = {\n    token: token,\n    id: userInfo[0].id\n  };\n  const dispatch = useDispatch();\n  const select = useSelector(e => {\n    return e;\n  });\n  const [modalState, showModal] = useState({\n    showDeleteModal: false,\n    id: \"\",\n    userData: userData\n  });\n  const override = `\n    display: block;\n    margin: 0 auto;\n    border-color: black;\n    margin-top: 10px;\n        `;\n  useEffect(() => {\n    dispatch(allActivities(userData));\n  }, [dispatch]);\n\n  const deleteActivity = data => {\n    showModal(prevstate => ({ ...prevstate,\n      showDeleteModal: !modalState.showDeleteModal,\n      id: data\n    }));\n  };\n\n  const getDate = e => {\n    let date = new Date(e);\n    return date.toDateString();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: state.ListTransaction ? /*#__PURE__*/_jsxDEV(Background, {\n      children: /*#__PURE__*/_jsxDEV(ModalWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(ModalCotent, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"listContent\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"All Transactions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), modalState.showDeleteModal ? /*#__PURE__*/_jsxDEV(DeleteModal, {\n            params: modalState,\n            showModal: showModal,\n            action: Delete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CloseModal, {\n          onClick: () => {\n            setState(prevstate => ({ ...prevstate,\n              ListTransaction: false\n            }));\n          },\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListTransactions, \"16k69bQL+SGIqZ52n3kAc2sFDEE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ListTransactions;\nexport default ListTransactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTransactions\");","map":{"version":3,"sources":["/home/abel/fms_front/src/components/Dashboard/Modals/listTransactionModal.js"],"names":["React","useEffect","useState","ClipLoader","useDispatch","useSelector","allActivities","Cookies","Bin","DeleteModal","Background","ModalWrapper","ModalCotent","CloseModal","deleteActivity","Delete","ListTransactions","state","setState","cookie","userInfo","get","token","userData","id","dispatch","select","e","modalState","showModal","showDeleteModal","override","data","prevstate","getDate","date","Date","toDateString","ListTransaction"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { allActivities } from \"../../../redux/actions/actionCreator\";\nimport Cookies from \"universal-cookie\";\nimport Bin from \"../../../images/bin.png\";\nimport DeleteModal from \"./DeleteModal\";\nimport {\n  Background,\n  ModalWrapper,\n  ModalCotent,\n  CloseModal,\n} from \"../../../styledComponents/Dashboard/Modals/listTransactionsModal\";\nimport { deleteActivity as Delete } from \"../../../redux/actions/actionCreator\";\nconst ListTransactions = ({ state, setState }) => {\n  const cookie = new Cookies();\n  let userInfo = cookie.get(\"user info\");\n  const token = cookie.get(\"login\");\n  let userData = { token: token, id: userInfo[0].id };\n\n  const dispatch = useDispatch();\n  const select = useSelector((e) => {\n    return e;\n  });\n\n  const [modalState, showModal] = useState({\n    showDeleteModal: false,\n    id: \"\",\n    userData: userData,\n  });\n\n  const override = `\n    display: block;\n    margin: 0 auto;\n    border-color: black;\n    margin-top: 10px;\n        `;\n\n  useEffect(() => {\n    dispatch(allActivities(userData));\n  }, [dispatch]);\n\n  const deleteActivity = (data) => {\n    showModal((prevstate) => ({\n      ...prevstate,\n      showDeleteModal: !modalState.showDeleteModal,\n      id: data,\n    }));\n  };\n\n  const getDate = (e) => {\n    let date = new Date(e);\n    return date.toDateString();\n  };\n\n  return (\n    <div>\n      {state.ListTransaction ? (\n        <Background>\n          <ModalWrapper>\n            <ModalCotent>\n              <div className=\"listContent\">\n                <h3>All Transactions</h3>\n              </div>\n              {modalState.showDeleteModal ? (\n                <DeleteModal\n                  params={modalState}\n                  showModal={showModal}\n                  action={Delete}\n                />\n              ) : null}\n            </ModalCotent>\n            <CloseModal\n              onClick={() => {\n                setState((prevstate) => ({\n                  ...prevstate,\n                  ListTransaction: false,\n                }));\n              }}\n            >\n              &times;\n            </CloseModal>\n          </ModalWrapper>\n        </Background>\n      ) : null}\n    </div>\n  );\n};\n\nexport default ListTransactions;\n"]},"metadata":{},"sourceType":"module"}